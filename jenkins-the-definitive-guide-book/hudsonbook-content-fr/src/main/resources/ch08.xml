<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="chapter-notification">
    <title>Notification</title>
    <sect1 id="sect-notification-introduction">
        <title>Introduction</title>
        <para>
            <indexterm id="I_indexterm8_d1e11406" significance="normal">
                <primary>notifications</primary>
            </indexterm>
            Bien qu'il soit important que votre serveur de build construise votre
            logiciel, il est encore plus important qu'il signale lorsqu'il ne peut pas le faire.
            Une part importante de la proposition de valeur de tout
            environnement d'intégration continue est d'améliorer le flux d'information
            sur la santé de votre projet ; que ce soit des tests d'intégration échoués, des régressions
            dans la suite des tests d'intégration ou d'autres problèmes de qualité comme une
            baisse dans la couverture de code ou de métriques de qualité de code.
            Dans tous les cas, un serveur d'intégration continue
            doit permettre aux bonnes personnes de connaître les nouveaux problèmes, et il doit pouvoir le
            faire rapidement. C'est ce que nous appelons notification.
        </para>
        <para>Il y a deux principales catégories de stratégies de notification, que
            j'appelle
            <indexterm id="I_indexterm8_d1e11412" significance="normal">
                <primary>notifications</primary>
                <secondary>passive (pull)</secondary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11417" significance="normal">
                <primary>notifications passives (pull)</primary>
            </indexterm>
            <emphasis>passive</emphasis>
            et
            <emphasis>
                <indexterm id="I_indexterm8_d1e11425" significance="normal">
                    <primary>notifications actives (push)</primary>
                </indexterm>
                <indexterm id="I_indexterm8_d1e11428" significance="normal">
                    <primary>notifications</primary>
                    <secondary>notifications actives (push)</secondary>
                </indexterm>
                active
            </emphasis>
            (ou
            <emphasis>pull</emphasis>/<emphasis>push</emphasis>). Les notifications passives
            (pull) demandent aux développeurs de consulter consciemment le statut du dernier
            build. Ces notifications comprennent les flux RSS, les radars de build, et (dans une certaine mesure)
            les e-mails. Les notifications actives (push) vont alerter les développeurs de manière pro-active
            lorsqu'un build échoue. Ces notifications comprennent des méthodes telles que des notifieurs intégrés
            au bureau, le dialogue en direct et les SMS. Ces deux approches ont leurs points positifs et négatifs. Les
            stratégies
            de notifications passives telles que les radars de build peuvent diffuser une connaissance
            générale sur les builds échoués et aider à installer une culture d'équipe où
            la correction des builds cassés prend une haute priorité. Des formes plus directes de
            notification peuvent encourager activement les développeurs à prendre les choses en
            main et corriger les builds cassés plus rapidement.
        </para>
    </sect1>
    <sect1 id="sect-notification-email">
        <title>Notification par email</title>
        <para>La notification
            <indexterm class="startofrange" id="ch08-email1" significance="normal">
                <primary>notifications</primary>
                <secondary>email</secondary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-email2" significance="normal">
                <primary>notifications email</primary>
            </indexterm>
            par email est la forme de notification la plus évidente et la plus commune. L'email est bien connu,
            omniprésent et facile à utiliser et à configurer (voir<xref linkend="sect-configuration-email"/>). Ainsi,
            quand
            les équipes mettent en place leur premier environnement d'intégration continue, c'est généralement
            la stratégie de notification qu'ils essaient en premier.
        </para>
        <para>Vous activez les notifications email dans Jenkins en cochant la case Notification
            par email et en fournissant la liste des adresses email des
            personnes qui doivent être notifiées (voir<xref linkend="fig-hudson-email-configuration"/>). Par défaut,
            Jenkins
            enverra un courrier pour
            <indexterm id="I_indexterm8_d1e11461" significance="normal">
                <primary>tâches de build</primary>
                <secondary>échoués</secondary>
                <tertiary>notifications pour</tertiary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11468" significance="normal">
                <primary>tâches de build</primary>
                <secondary>build instable de</secondary>
                <tertiary>notifications pour</tertiary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11475" significance="normal">
                <primary>builds instables</primary>
                <secondary>notifications pour</secondary>
            </indexterm>
            chaque build échoué ou instable. Rappelez-vous,
            Jenkins enverra aussi un nouvel email dès le premier build réussi après une série de builds échoués ou
            instables, afin d'indiquer que le problème a été résolu.
        </para>
        <figure float="0" id="fig-hudson-email-configuration">
            <title>Configurer les notifications email</title>
            <mediaobject id="I_mediaobject8_d1e11484">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0801.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0801.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Normalement, un build ne devrait pas prendre trop d'essais pour fonctionner à
            nouveau — les développeurs doivent diagnostiquer et reproduire le problème localement, le corriger,
            et alors seulement commiter leur correction dans le gestionnaire de versions. Des erreurs répétées
            de build indiquent généralement une erreur de configuration chronique ou de mauvaises
            pratiques de développement (par exemple, des développeurs qui soumettent leurs modifications sans
            vérifier au préalable leur fonctionnement en local).
        </para>
        <para>Vous pouvez également choisir d'envoyer un email distinct à tous les développeurs qui ont
            des changements committés dans le build échoué. C'est généralement une bonne idée, car
            les développeurs qui ont committés des changements depuis le dernier build sont naturellement
            les personnes qui devraient être les plus intéressées par les résultats du build. Jenkins
            va récupérer l'adresse email de l'utilisateur à partir du domaine de sécurité couramment
            configuré (voir<xref linkend="sect-security-realms"/>), ou en dérivant l'adresse email à partir
            de l'utilisateur de l'outil de gestion de versions s'il a été configuré (voir
            <xref linkend="sect-configuration-email"/>).
        </para>
        <para>Si vous utilisez cette option, il peut être moins pertinent d'inclure l'équipe
            entière dans la liste de diffusion principale. Vous inclurez de préférence les personnes
            qui seront intéressées par le suivi du résultat de chaque build (tels que
            les responsables techniques), et laisser Jenkins informer les développeurs
            <phrase role="keep-together">contributeurs</phrase>
            directement.
        </para>
        <para>Cela implique que les changements ont provoqué l'échec du build,
            ce qui est généralement (mais pas toujours) le cas. Cependant, si les builds sont
            peu fréquents (par exemple les builds nocturnes, ou si un build est en attente pendant
            plusieurs heures avant d'être abandonné), de nombreux changements peuvent être
            committés. Il est alors difficile de savoir quel est le développeur responsable
            de l'échec du build.
        </para>
        <para>Tous les builds ne sont pas semblables par rapport aux notifications par email.
            Les développeurs qui ont soumis des changements sont particulièrement intéressés par les résultats
            des builds des tests unitaires et des tests d'intégration (surtout ceux déclenchés par
            leurs propres modifications). Les testeurs seront eux plus intéressés par
            jeter un œil sur le statut des tests d'acceptance automatisés. La
            configuration des notifications email sera donc différente pour chaque étape de build. En fait, il
            est utile de définir des stratégies de notification email. Par exemple,
        </para>
        <itemizedlist>
            <listitem>
                <para>pour les builds rapides (les tests unitaires/d'intégration s'exécutent en moins de 5
                    minutes) : les notifications sont envoyées aux chefs d'équipes et aux développeurs
                    qui ont committé des changements,
                </para>
            </listitem>
            <listitem>
                <para>pour les builds lents (les builds de tests d'acceptance s'exécutent après les builds
                    rapides) : les notifications sont envoyées aux chefs d'équipes, aux testeurs, ainsi qu'aux
                    développeurs
                    qui ont committé des changements.
                </para>
            </listitem>
            <listitem>
                <para>pour les builds nocturnes (les métriques de qualité, tests de performance et autres s'exécutent
                    uniquement si les autres builds fonctionnent): les notifications sont envoyées à tous les membres
                    d'équipe
                    — Ceux-ci fournissent une photo instantanée de la santé du projet avant la réunion quotidienne.
                </para>
            </listitem>
        </itemizedlist>
        <para>En fait, vous devriez adopter au cas par cas la stratégie de notification
            appropriée pour chaque tâche de build, plutôt que d'appliquer d'une politique
            globale pour toutes les tâches de build.
        </para>
    </sect1>
    <sect1 id="sect-notification-advanced-email">
        <title>Notification par email avancée</title>
        <para>Par défaut, les notifications par email Jenkins sont un outil plutôt brut.
            Les messages de notification sont toujours envoyés au même groupe de
            personnes. Vous ne pouvez pas envoyer des messages à différentes personnes en fonction de ce
            qui a mal tourné. De la même façon, vous ne pouvez pas mettre en œuvre des politiques d'escalade.
            Par exemple, il pourrait être utile d'être en mesure de notifier les développeurs qui ont committé
            les modifications la première fois qu'un build échoue, et envoyer un message différent au
            chef d'équipe ou à l'équipe entière si le build échoue une seconde fois
        </para>
        <para>Le
            <indexterm class="startofrange" id="ch08-ext1" significance="normal">
                <primary>plugins</primary>
                <secondary>Email-ext</secondary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-ext2" significance="normal">
                <primary>plugin Email-ext</primary>
            </indexterm>
            plugin Email-ext vous permet de définir une stratégie de
            notification par email plus fine. Ce plugin ajoute une case Editable Email Notification
            (voir<xref linkend="fig-hudson-email-ext-configuration"/>), qui remplace efficacement la notification par
            email standard de Jenkins. Ainsi, vous pouvez définir une liste de destinataires par défaut et affiner le
            contenu du
            message électronique. Vous pouvez aussi définir une stratégie de notification plus précise avec des
            messages différents pour des listes de destinataires différents suivant les évènements. Notez qu'une
            fois que vous avez installé et configuré ce plugin pour votre tâche de build, vous pouvez désactiver la
            configuration normale de notification email.
        </para>
        <figure float="none" id="fig-hudson-email-ext-configuration">
            <title>Configurer les notifications email avancées</title>
            <mediaobject id="I_mediaobject8_d1e11539">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0802.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0802.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Ce plugin a deux fonctionnalités liées mais distinctes. Tout d'abord,
            il vous permet de personnaliser le message de notification par email. Vous pouvez choisir parmi
            un grand nombre de mots clés prédéfinis pour créer vos propres titres et corps de messages
            personnalisés. Vous incluez un mot clé dans votre modèle de message en utilisant la
            notation habutuelle dollar (e.g.,
            <literal moreinfo="none">${BUILD_NUMBER}</literal>
            ou
            <literal moreinfo="none">$BUILD_NUMBER)</literal>. Certains mots clés acceptent des paramètres
            que vous pouvez spécifier en utilisant le format
            <literal moreinfo="none">name=value</literal>
            (ex :
            <literal moreinfo="none">${BUILD_LOG, maxLines=100}</literal>
            ou<literal moreinfo="none">${ENV,
    var="PATH"}</literal>). Les mots clés les plus utiles sont:
        </para>
        <variablelist>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${DEFAULT_SUBJECT}</literal>
                </term>
                <listitem>
                    <para>Le sujet par défaut configuré dans la page de configuration Jenkins</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${DEFAULT_CONTENT}</literal>
                </term>
                <listitem>
                    <para>Le corps du message par défaut configuré dans la page de configuration Jenkins</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${PROJECT_NAME}</literal>
                </term>
                <listitem>
                    <para>Le nom du projet</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${BUILD_NUMBER}</literal>
                </term>
                <listitem>
                    <para>Le numéro de build courant</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${BUILD_STATUS}</literal>
                </term>
                <listitem>
                    <para>Le statut du build courant (échec, succès, etc.)</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${CAUSE}</literal>
                </term>
                <listitem>
                    <para>La cause du build</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${BUILD_URL}</literal>
                </term>
                <listitem>
                    <para>Un lien vers la page correspondante du build sur Jenkins</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${FAILED_TESTS}</literal>
                </term>
                <listitem>
                    <para>Information sur les tests unitaires échoués, si certains ont
                        échoués
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${CHANGES}</literal>
                </term>
                <listitem>
                    <para>Changements effectués depuis le dernier build</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <literal moreinfo="none">${CHANGES_SINCE_LAST_SUCCESS}</literal>
                </term>
                <listitem>
                    <para>Tous les changements effectués depuis le dernier build avec succès</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>Pour obtenir la liste complète des mots clés disponibles ainsi que leurs options pour
            ceux qui acceptent des paramètres, cliquez sur l'icône d'aide en face de
            Contexte Token Reference.
        </para>
        <para>Le bouton Avancé vous permet de définir une stratégie de notification
            plus sophistiquée basée sur le concept de déclencheurs (voir<xref
                    linkend="fig-email-notification-triggers"/>).
            Les déclencheurs
            <indexterm id="I_indexterm8_d1e11638" significance="normal">
                <primary>tâches de build</primary>
                <secondary>échoué</secondary>
                <tertiary>notifications pour</tertiary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11645" significance="normal">
                <primary>tâche de build</primary>
                <secondary>build instable de</secondary>
                <tertiary>notifications pour</tertiary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11652" significance="normal">
                <primary>builds instables</primary>
                <secondary>notifications pour</secondary>
            </indexterm>
            déterminent quand les notifications email
            doivent être envoyées.
            Les déclencheurs supportés sont les suivants :
        </para>
        <variablelist>
            <varlistentry>
                <term>Failure</term>
                <listitem>
                    <para>Chaque fois qu'un build échoue.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Still Failing</term>
                <listitem>
                    <para>Pour tous les builds qui restent en échec par la suite.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Unstable</term>
                <listitem>
                    <para>Chaque fois qu'un build est instable.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Still Unstable</term>
                <listitem>
                    <para>Pour tous les builds qui restent instables par la suite.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Success</term>
                <listitem>
                    <para>Pour chaque build en succès.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Fixed</term>
                <listitem>
                    <para>Quand un build passe d'échec ou instable à
                        succès.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Before Build</term>
                <listitem>
                    <para>Avant chaque début de build.</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <figure float="0" id="fig-email-notification-triggers">
            <title>Configurer les déclencheurs de notification email</title>
            <mediaobject id="I_mediaobject8_d1e11704">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0803.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0803.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Vous pouvez configurer autant (ou aussi peu) de déclencheurs que vous le souhaitez. La
            liste des destinataires et le modèle de message peuvent être personnalisés pour chaque
            déclencheur, par exemple en utilisant les déclencheur Still Failing et
            Still Unstable, vous pouvez mettre en place une stratégie de notification qui n'avertit que
            le développeur qui a committé des changements la première fois qu'une tâche de build échoue,
            mais continue par informer le chef d'équipe si elle échoue une seconde fois. Vous pouvez
            choisir d'envoyer le message uniquement à des développeurs qui ont committé lors
            du build («Send to committers"), ou d'inclure également tous ceux qui ont
            committé depuis le dernier build avec succès. Cela assure que
            tous ceux qui peuvent être impliqués dans l'échec du build seront
            notifiés de façon<phrase role="keep-together">appropriée</phrase>.
        </para>
        <para>Vous pouvez également personnaliser le contenu du message en cliquant sur
            l'option More Configuration (comme indiqué pour le déclencheur Still Failing dans
            <xref linkend="fig-email-notification-triggers"/>). De cette façon, vous pouvez personnaliser
            des messages différents qui seront envoyés dans des cas distincts.
        </para>
        <para>Les déclencheurs interagissent intelligemment entre eux. Donc, si vous configurez à la fois le
            déclencheur Failing et le déclencheur Still Failing, seul le déclencheur Still Failing
            sera activé lors du second échec de build.
        </para>
        <para>Un exemple d'un tel message personnalisé est illustré dans
            <xref linkend="fig-hudson-email-notification-message"/>.
        </para>
        <figure float="0" id="fig-hudson-email-notification-message">
            <title>Message de notification personnalisé</title>
            <mediaobject id="I_mediaobject8_d1e11728">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0804.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0804.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Toutefois, l'email n'est pas une stratégie de notification sans défaut.
            Certains développeurs ferment par moment leurs clients de messagerie afin
            d'éviter d'être interrompu. Dans les grandes organisations, le nombre d'emails
            qui arrivent chaque jour peut être considérable et les notifications d'échec de
            de build peuvent être cachées parmi une foule d'autres messages moins importants.
            Les échecs de build peuvent donc ne pas toujours avoir l'attention prioritaire qu'ils
            nécessitent dans un environnement d'intégration continue finement réglé. Dans les sections
            suivantes, nous nous pencherons sur certaines stratégies de notification autres qui peuvent
            être utilisées pour augmenter la sensibilisation des équipes sur les builds échoués et encourager
            les développeurs à les corriger
            <indexterm id="I_indexterm8_d1e11735" class="endofrange" startref="ch08-ext1" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11737" class="endofrange" startref="ch08-ext2" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11739" class="endofrange" startref="ch08-email1" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11741" class="endofrange" startref="ch08-email2" significance="normal">
                <primary>notifications email</primary>
            </indexterm>
            plus rapidement.
        </para>
    </sect1>

    <sect1 id="sect-notification-claiming">
        <title>Revendiquer des builds</title>
        <para>Quand
            <indexterm id="I_indexterm8_d1e11750" significance="normal">
                <primary>tâches de build</primary>
                <secondary>échoués</secondary>
                <tertiary>revendiquer</tertiary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11757" significance="normal">
                <primary>revendiquer des builds échoués</primary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11760" significance="normal">
                <primary>utilisateurs</primary>
                <secondary>revendiquer des builds échoués</secondary>
            </indexterm>
            un build échoue, il peut être utile
            de savoir que quelqu'un a repéré le problème et y travaille dessus. Cela évite d'avoir plusieurs
            développeurs qui gaspillent leur temps à essayer de corriger le même problème, chacun de leur côté.
        </para>

        <para>Le plugin Claim permet aux développeurs d'indiquer qu'ils se sont appropriés un build cassé
            et qu'ils essaient de le réparer. Vous pouvez installer ce plugin de la façon habituelle.
            Une fois installé, les développeurs peuvent revendiquer un build échoué comme le leur. Ils peuvent
            éventuellement ajouter un commentaire pour expliquer la cause suspectée de l'échec du build et ce
            qu'ils ont l'intention de faire à ce sujet.
            Le build revendiqué sera alors marqué comme tel dans l'historique des builds afin d'éviter aux
            autres développeurs de gaspiller inutilement du temps à investiguer.
        </para>
        <para>Pour activer la revendication pour une tâche de build, vous devez cocher la case “Allow
            broken build claiming” dans la page de configuration de la tâche de build. Alors,
            vous pourrez revendiquer un build cassé dans la page de détails du build
            (voir<xref linkend="fig-hudson-notification-claim"/>).
            Les builds revendiqués seront affichés avec une icône dans l'historique des builds indiquant qu'ils
            ont été revendiqués. Vous pouvez aussi effectuer une revendication de build “sticky” afin que
            tous les échecs ultérieurs de build pour cette tâche soient aussi automatiquement
            revendiqués par ce développeur, et ce, jusqu'à ce que le problème soit résolu.
        </para>
        <figure float="0" id="fig-hudson-notification-claim">
            <title>Revendiquer un build échoué</title>
            <mediaobject id="I_mediaobject8_d1e11775">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0805.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0805.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
    </sect1>
    <sect1 id="sect-notification-rss">
        <title>Flux RSS</title>
        <para>Jenkins
            <indexterm class="startofrange" id="ch08-rss1" significance="normal">
                <primary>flux RSS, des résultats de build</primary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-rss2" significance="normal">
                <primary>rapporter</primary>
                <secondary>résultats de test</secondary>
                <tertiary sortas="RSS feeds">dans les flux RSS</tertiary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-rss3" significance="normal">
                <primary>notifications</primary>
                <secondary>flux RSS</secondary>
            </indexterm>
            fournit aussi
            des flux RSS pratiques pour les résultats de build, tant pour les résultats globaux sur l'ensemble
            de vos builds (ou juste les builds d'une vue particulière), que pour les résultats d'un build spécifique.
            Les icônes de flux RSS sont disponibles au bas des tableaux de bord des builds
            (voir<xref linkend="fig-hudson-notification-rss-view"/>) et au bas du panneau de l'historique
            des builds pour les tâches de build individuel. Ils vous donnent soit accès
            à l'ensemble des résultats des builds, soit accès simplement aux builds échoués.
        </para>
        <figure float="0" id="fig-hudson-notification-rss-view">
            <title>Flux RSS dans Jenkins</title>
            <mediaobject id="I_mediaobject8_d1e11806">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0806.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0806.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Les URLs des flux RSS sont simples, et fonctionnent pour toute page Jenkins
            affichant un ensemble de résultats de build. Vous devez juste rajouter
            <filename moreinfo="none">/rssAll</filename>
            pour obtenir le flux RSS de tous les résultats de build d'une page, ou
            <filename moreinfo="none">/rssFailed</filename>
            pour n'obtenir que les résultats des build échoués. Enfin,
            <filename moreinfo="none">/rssLatest</filename>
            vous fournira un flux RSS contenant uniquement les derniers résultats de build. Mais la façon la plus simple
            de récupérer l'URL est de cliquer simplement sur l'icône RSS dans la page Jenkins correspondante.
        </para>
        <para>Il y a pléthore de lecteurs RSS, à la fois commerciaux et open source, disponibles pour pratiquement
            toutes les plates-formes et périphériques. Ce peut être un excellent moyen pour garder un œil sur les
            résultats de build. La plupart des navigateurs (Firefox en particulier) et des clients email supportent
            les flux RSS. Certains lecteurs ont des problèmes avec l'authentification. Si votre instance
            Jenkins est sécurisée, il vous faudra peut-être faire un peu de configuration supplémentaire pour
            voir les résultats de votre build.
        </para>
        <para>Les flux RSS peuvent être une source d'information sur l'ensemble des résultats
            de build, et vous permettent de voir l'état de vos builds en un coup d'œil sans
            avoir à se connecter au serveur. Néanmoins, la plupart des lecteurs RSS sont par
            nature passifs - vous pouvez consulter l'état de vos builds, mais le
            lecteur RSS ne sera généralement pas en mesure de vous notifier si un nouveau build
            en échec
            <indexterm id="I_indexterm8_d1e11826" class="endofrange" startref="ch08-rss1" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11828" class="endofrange"
                       startref="ch08-rss2" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11830" class="endofrange" startref="ch08-rss3" significance="normal">
                <primary/>
            </indexterm>
            apparait.
        </para>
    </sect1>

    <sect1 id="sect-build-radiator">
        <title>Radars de build</title>
        <para>Le
            <indexterm class="startofrange" id="ch08-rad1" significance="normal">
                <primary>radars d'informations</primary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-rad2" significance="normal">
                <primary>radars de build</primary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-rad3" significance="normal">
                <primary>notifications</primary>
                <secondary>radars de build</secondary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-rad4" significance="normal">
                <primary>radars, informations</primary>
            </indexterm>
            concept de radar d'informations est couramment utilisé dans les cercles
            agiles. Selon le gourou agile Alistair Cockburn:
        </para>
        <blockquote>
            <para>Un radar d'information est un écran affiché dans un endroit que les gens peuvent
                voir quand ils travaillent ou passent à proximité. Il présente aux lecteurs les informations
                dont ils se soucient, sans avoir à poser de question à quelqu'un. Cela signifie plus de
                communication avec moins d'interruptions.
            </para>
        </blockquote>
        <para>Dans le contexte d'un serveur d'intégration continue, un radar d'informations est un
            dispositif ou affichage important qui permet aux membres de l'équipe ou à d'autres de facilement
            voir si l'un des builds est actuellement cassé. Il montre généralement soit un
            résumé de tous les résultats du build courant, soit seulement ceux en échec, et est
            affiché sur un grand écran plat situé bien en vue sur un mur. Cette
            sorte de radar d'informations spécialisé est souvent connu comme un
            <emphasis>radar de build</emphasis>.
        </para>
        <para>Utilisés correctement, les radars de build sont parmi les stratégies de notification passive
            les plus efficaces pour que tout le monde soit conscient des build échoués.
            En outre, contrairement à certains des périphériques de retours extrêmes dont nous discuterons
            plus tard dans ce chapitre, un radar de build peut contenir plusieurs tâches de build, y compris
            plusieurs tâches
            <phrase role="keep-together">de build</phrase>
            échouées, et peut donc encore
            être efficacement utilisé dans un contexte d'équipes multiples.
        </para>
        <para>Il y a plusieurs solutions de radars de build pour Jenkins. Une des plus
            simples est d'utiliser le plugin Jenkins Radiator View. Ce plugin ajoute un nouveau
            type de tâche que vous pouvez créer: le (voir<xref linkend="fig-hudson-notification-radiator-job"/>).
        </para>
        <figure float="none" id="fig-hudson-notification-radiator-job">
            <title>Créer une vue radar</title>
            <mediaobject id="I_mediaobject8_d1e11873">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0807.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0807.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Configurer la vue radar est similaire à la configuration d'une
            vue liste plus conventionnelle - vous devez simplement spécifier les tâches de build
            que vous voulez inclure dans la vue, en les choisissant une à une ou en utilisant une
            expression régulière.
        </para>
        <para>Comme la vue radar occupe tout l'écran, modifier ou supprimer une vue radar est
            un peu délicat. En fait, la seule façon d'ouvrir l'écran de configuration de la vue
            est d'ajouter
            <filename moreinfo="none">/configure</filename>
            à l'URL de la vue : si
            votre radar est nommé “build-<phrase role="keep-together">radiator</phrase>,” vous pouvez
            éditer la configuration de la vue en ouvrant
            <emphasis>http://my.hudson.server/view/build-radiator/configure</emphasis>.
        </para>
        <para>La vue radar (voir<xref linkend="fig-hudson-notification-radiator"/>) affiche une
            grande boite rouge ou jaune pour chaque build échoué ou instable. Ces boites contiennent
            le nom de la tâche de build en lettres capitales ainsi que d'autres détails.
            Vous pouvez configurer la vue radar pour afficher les builds en succès et les builds en
            échec(ils seront affichés dans de petites boites vertes). Cependant, un bon radar
            ne devrait afficher que les builds échoués, à moins que tous les builds soient
            <indexterm id="I_indexterm8_d1e11895" class="endofrange" startref="ch08-rad1" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11897" class="endofrange" startref="ch08-rad2" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11899" class="endofrange" startref="ch08-rad3" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11901" class="endofrange" startref="ch08-rad4" significance="normal">
                <primary/>
            </indexterm>
            en succès.
        </para>
        <figure float="0" id="fig-hudson-notification-radiator">

            <title>Afficher une vue radar</title>
            <mediaobject id="I_mediaobject8_d1e11907">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0808.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0808.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
    </sect1>
    <sect1 id="sect-notification-instant-messaging">
        <title>Messagerie instantanée</title>
        <para>La
            <indexterm class="startofrange" id="ch08-im1" significance="normal">
                <primary>messagerie instantanée (IM)</primary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-im2" significance="normal">
                <primary>notifications</primary>
                <secondary>messagerie instantanée</secondary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11925" significance="normal">
                <primary>IM</primary>
                <see>messagerie instantanée</see>
            </indexterm>
            messagerie instantanée (ou IM) est aujourd'hui
            largement utilisée comme un moyen rapide et léger de communication, aussi bien professionnelle que
            personnelle.
            La messagerie instantanée est, par définition, instantanée, ce qui lui donne un avantage sur l'email
            quand il s'agit de notification rapide. elle est également «push» plutôt que
            «pull». Lorsque vous recevez un message, il apparaîtra sur votre écran et
            attirera votre attention. Il est un peu plus difficile de l'ignorer ou de reporter
            qu'un simple message email.
        </para>
        <para>Jenkins offre un bon support pour les notifications via messagerie
            instantanée. Le
            <indexterm id="I_indexterm8_d1e11933" significance="normal">
                <primary>plugins</primary>
                <secondary>messagerie instantanée</secondary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e11938" significance="normal">
                <primary>plugin Instant Messaging</primary>
            </indexterm>
            plugin Instant
            Messaging fournit un support générique pour communiquer avec Jenkins via
            la messagerie instantanée. Des
            <phrase role="keep-together">plugins</phrase>
            spécifiques peuvent ensuite être ajoutés pour différents protocoles de
            messagerie instantanée tels que Jabber ou IRC.
        </para>
        <sect2>
            <title>Notification IM avec Jabber</title>
            <para>De
                <indexterm class="startofrange" id="ch08-jabber1" significance="normal">
                    <primary>protocole Jabber</primary>
                </indexterm>
                <indexterm class="startofrange" id="ch08-jabber2" significance="normal">
                    <primary>messagerie instantanée (IM)</primary>
                    <secondary>protocole Jabber pour</secondary>
                </indexterm>
                nombreux serveurs de messagerie instantanée sont basés sur Jabber, un
                protocole de messagerie instantanée open source et basé sur XML. Jenkins fournit un bon
                support pour la messagerie instantanée Jabber, de telle sorte que les développeurs peuvent recevoir
                des notifications en temps réel des échecs de build. De plus, le plugin exécute
                un bot de messagerie instantanée qui écoute les canaux de communication et permet aux développeurs
                d'exécuter
                des commandes sur le serveur Jenkins via des messages instantanés.
            </para>
            <para>La mise en place du support de messagerie instantanée dans Jenkins est simple. D'abord, vous
                devez installer à la fois le plugin Jenkins instant-messaging et
                le
                <indexterm id="I_indexterm8_d1e11961" significance="normal">
                    <primary>plugins</primary>
                    <secondary>Jabber Notifier</secondary>
                </indexterm>
                <indexterm id="I_indexterm8_d1e11966" significance="normal">
                    <primary>plugin Jabber Notifier</primary>
                </indexterm>
                plugin Jenkins Jabber notifier en utilisant la page
                standard du gestionnaire de plugins et en redémarrant Jenkins
                (voir<xref linkend="fig-email-notification-jabber-plugins"/>).
            </para>
            <figure float="0" id="fig-email-notification-jabber-plugins">
                <title>Installation des plugins Jenkins de messagerie instantanée</title>
                <mediaobject id="I_mediaobject8_d1e11975">
                    <imageobject role="print">
                        <imagedata fileref="figs/print/jtdg_0809.pdf" format="PDF"/>
                    </imageobject>
                    <imageobject role="web">
                        <imagedata fileref="figs/web/jtdg_0809.png" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para>Une fois cela fait, vous devez configurer votre serveur de messagerie
                instantanée. N'importe quel serveur Jabber peut faire l'affaire. Vous pouvez utiliser un service public
                comme
                Google Chat, ou configurer votre propre serveur de messagerie instantanée localement (le
                serveur de messagerie instantannée open source Java
                <ulink url="http://www.igniterealtime.org/projects/openfire/index.jsp">OpenFire</ulink>
                est un bon choix). Utiliser un service public pour les communications internes
                peut être mal vu par les administrateurs système, et vous pouvez avoir
                des difficultés pour passer les firewalls de l'entreprise. D'autre part, configurer votre propre
                service de messagerie interne a du sens pour une équipe de développement ou toute autre organisation en
                général, car il fournit un autre
                canal de communication qui fonctionne bien pour partager des questions techniques ou
                commentaires entre développeurs. Les exemples suivants utiliseront un
                serveur OpenFire local, mais l'approche générale fonctionne pour tout
                serveur-
                <phrase role="keep-together">Jabber</phrase>
                compatible.
            </para>
            <para>La première étape consiste à créer un compte dédié sur votre
                serveur Jabber pour Jenkins. Celui-ci est juste un compte de messagerie instantannée ordinaire, mais il
                doit être distinct des comptes de vos développeurs (voir<xref
                        linkend="fig-hudson-notification-im-users"/>).
            </para>
            <figure float="none" id="fig-hudson-notification-im-users">
                <title>Jenkins nécessite son propre compte de messagerie instantanée Jenkins</title>
                <mediaobject id="I_mediaobject8_d1e11995">
                    <imageobject role="print">
                        <imagedata fileref="figs/print/jtdg_0810.pdf" format="PDF"/>
                    </imageobject>
                    <imageobject role="web">
                        <imagedata fileref="figs/web/jtdg_0810.png" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para>Une fois que vous avez configuré un compte de messagerie instantanée, vous devez configurer Jenkins
                pour envoyer des notifications par message instantané via ce compte. Allez à la page de configuration
                principale
                et cochez la case Enable Jabber Notification (voir<xref linkend="fig-hudson-notification-jabber-basic"/>
                ).
                Ici, vous fournissez
                l'identifiant Jabber et le mot de passe pour votre compte. Jenkins peut habituellement
                retrouver le serveur de messagerie à partir de l'identifiant Jabber (s'il est différent, vous pouvez
                le remplacer dans les options avancées). Si vous utilisez les canaux de communication en groupe
                (une autre stratégie de communication utile pour les équipes de développement), vous
                pouvez aussi renseigner ici le nom de ces salons de discussion. De cette façon, Jenkins
                sera en mesure de traiter les instructions envoyées dans les salons de chat, ainsi
                que ceux reçus comme des messages directs.
            </para>
            <figure float="none" id="fig-hudson-notification-jabber-basic">
                <title>Mise en place de notifications de base Jabber dans Jenkins</title>
                <mediaobject id="I_mediaobject8_d1e12007">
                    <imageobject role="print">
                        <imagedata fileref="figs/print/jtdg_0811.pdf" format="PDF"/>
                    </imageobject>
                    <imageobject role="web">
                        <imagedata fileref="figs/web/jtdg_0811.png" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para>C'est tout ce dont vous avez besoin pour une configuration de base. Cependant, vous devrez peut-être
                donner quelques informations supplémentaires dans la section avancée pour des détails qui sont
                spécifiques à votre installation (voir<xref linkend="fig-hudson-notification-jabber-advanced"/>). Ici,
                vous pouvez
                spécifier le nom et le port de votre serveur Jabber s'ils ne peuvent être
                dérivés de l'identifiant Jenkins Jabber. Vous pouvez également fournir un suffixe
                par défaut qui peut être appliqué à l'utilisateur Jenkins pour générer
                l'identifiant Jabber correspondant. Surtout, si vous avez sécurisé votre
                serveur Jenkins, vous devrez fournir un nom d'utilisateur et un
                mot de passe Jenkins valides afin que le bot de messagerie instantanée puisse réagir correctement
                <phrase role="keep-together">aux instructions</phrase>.
            </para>
            <figure float="0" id="fig-hudson-notification-jabber-advanced">
                <title>Configuration avancée Jabber</title>
                <mediaobject id="I_mediaobject8_d1e12022">
                    <imageobject role="print">
                        <imagedata fileref="figs/print/jtdg_0812.pdf" format="PDF"/>
                    </imageobject>
                    <imageobject role="web">
                        <imagedata fileref="figs/web/jtdg_0812.png" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para>Une fois configuré, vous devez définir une stratégie de notification Jabber
                pour chacune de vos tâches de build. Ouvrez la page de configuration de tâche de build
                et cliquez sur l'option Jabber Notification.
            </para>
            <para>D'abord, vous devez définir une liste de destinataires pour les messages. Vous
                pouvez envoyer des messages à des individus (utilisez simplement l'identifiant Jabber correspondant,
                tel que<emphasis>joe@jabber.acme.com</emphasis>) ou à des salons de messagerie instantanée que vous avez
                créé. Pour les salons, vous devez normalement ajouter une “*” au début
                de son identifiant (ex : “*gameoflife@conference.jabber.acme.org”).
                Cependant, si cet identifiant contient “@conference.”, Jenkins comprendra
                qu'il s'agit d'un salon de messagerie instantanée et ajoutera automatiquement l'“*”.
                L'approche basée sur un salon est la plus souple bien que pour que cette stratégie soit vraiment
                efficace,
                vous devez être sûr que les développeurs y sont connectés en permanence.
            </para>
            <para>Vous devez aussi définir une stratégie de notification. Celle-ci détermine
                lesquels de vos résultats de build provoqueront un envoi de message. Les options
                sont:
            </para>
            <variablelist>
                <varlistentry>
                    <term>all</term>
                    <listitem>
                        <para>Envoie une notification pour chaque build.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>failure</term>
                    <listitem>
                        <para>Envoie une notification uniquement pour les builds échoués et instables.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>failure and fixed</term>
                    <listitem>
                        <para>Envoie une notification pour les builds échoués et instables, et
                            le premier build en succès après un build échoué ou instable.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>change</term>
                    <listitem>
                        <para>Envoie une notification quand le résultat de build change.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>Si vous utilisez les salons de messagerie instantanée, vous pouvez demander à Jenkins d'envoyer
                une notification au salon lorsqu'un build démarre (en utilisant l'option
                “Notify on build starts”).
            </para>
            <para>En ce qui concerne les builds démarrés par les systèmes de gestion de version,
                Jenkins peut aussi notifier des destinataires supplémentaires. Pour cela, il faut utiliser le suffixe
                par défaut décrit précédemment afin de générer l'identifiant Jabber à partir de l'utilisateur du système
                de gestion de version. Vous pouvez choisir de notifier :
            </para>
            <variablelist>
                <varlistentry>
                    <term>SCM committers</term>
                    <listitem>
                        <para>Tous les utilisateurs qui ont committés des changements pour le build courant,
                            et donc soupçonnés d'avoir cassé le build.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>SCM culprits</term>
                    <listitem>
                        <para>Tous les utilisateurs qui ont committés des changements depuis le dernier build avec
                            succès.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>SCM fixers</term>
                    <listitem>
                        <para>Tous les utilisateurs qui ont committé des changements du premier build avec succès
                            après un build échoué ou instable.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Upstream committers</term>
                    <listitem>
                        <para>Envoie une notification aux utilisateurs qui ont committé des changements pour les builds
                            en amont et courant. Cela fonctionne automatiquement pour les tâches de build Maven, mais
                            nécessite d'activer l'empreinte numérique (fingerprint) des autres types de systèmes de
                            build.
                        </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>Au moment de la rédaction, vous ne pouvez définir qu'une stratégie
                de notification. Ainsi, certaines des options avancées que nous avons vu dans
                <xref linkend="sect-notification-advanced-email"/>
                ne sont pas encore disponibles pour
                la messagerie instantanée.
            </para>
            <para>Les développeurs seront notifiés via leur client de messagerie instantanée favori (voir
                <xref linkend="fig-hudson-notification-im-messages"/>). Ils peuvent
                aussi interagir avec le serveur de build via une session de messagerie en utilisant un ensemble de
                commandes simples dont voici les plus utiles :
            </para>
            <itemizedlist>
                <listitem>
                    <para><literal moreinfo="none">!build game-of-life</literal>—Démarre le
                        build
                        <emphasis>game-of-life</emphasis>
                        immédiatement.
                    </para>
                </listitem>
                <listitem>
                    <para><literal moreinfo="none">!build game-of-life 15m</literal>—Démarre le
                        build
                        <emphasis>game-of-life</emphasis>
                        dans 15 minutes.
                    </para>
                </listitem>
                <listitem>
                    <para><literal moreinfo="none">!comment game-of-life 207 'oops'</literal>—Ajouter
                        une description au build défini.
                    </para>
                </listitem>
                <listitem>
                    <para><literal moreinfo="none">!status game-of-life</literal>—Affiche le status
                        du dernier build de cette tâche de build.
                    </para>
                </listitem>
                <listitem>
                    <para><literal moreinfo="none">!testresult game-of-life</literal>—Affiche le résultat complet
                        du dernier build.
                    </para>
                </listitem>
                <listitem>
                    <para><literal moreinfo="none">!health game-of-life</literal>—Affiche un résumé plus
                        complet de l'état de santé du dernier build.
                    </para>
                </listitem>
            </itemizedlist>
            <para>Vous pouvez obtenir une liste complete des commandes en envoyant le message
                <literal moreinfo="none">!help</literal>
                à l'utilisateur
                <indexterm id="I_indexterm8_d1e12141" class="endofrange" startref="ch08-jabber1" significance="normal">
                    <primary/>
                </indexterm>
                <indexterm id="I_indexterm8_d1e12143" class="endofrange" startref="ch08-jabber2" significance="normal">
                    <primary/>
                </indexterm>
                Jenkins.
            </para>
            <figure float="none" id="fig-hudson-notification-im-messages">
                <title>Messages Jenkins Jabber en action</title>
                <mediaobject id="I_mediaobject8_d1e12150">
                    <imageobject role="print">
                        <imagedata fileref="figs/print/jtdg_0813.pdf" format="PDF"/>
                    </imageobject>
                    <imageobject role="web">
                        <imagedata fileref="figs/web/jtdg_0813.png" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </sect2>

        <sect2>
            <title>Notification avec IRC</title>
            <para>Une
                <indexterm class="startofrange" id="ch08-irc1" significance="normal">
                    <primary>IRC (Internet Relay Chat)</primary>
                </indexterm>
                <indexterm class="startofrange" id="ch08-irc3" significance="normal">
                    <primary>messagerie instantanée (IM)</primary>
                    <secondary>IRC pour</secondary>
                </indexterm>
                autre forme de messagerie instantanée Internet populaire est
                Internet Relay Chat, ou IRC. IRC est traditionnellement centré sur les groupes
                de discussions (même si la messagerie directe est également supportée). Elle est une
                forme de communication très populaire parmi les développeurs, en particulier dans le monde
                open source.
            </para>
            <para>Le
                <indexterm id="I_indexterm8_d1e12171" significance="normal">
                    <primary>plugins</primary>
                    <secondary>IRC</secondary>
                </indexterm>
                <indexterm id="I_indexterm8_d1e12176" significance="normal">
                    <primary>plugin IRC</primary>
                </indexterm>
                plugin Jenkins IRC vous permet d'interagir avec votre serveur Jenkins
                via un canal IRC, à la fois pour recevoir des messages de notification, mais aussi pour
                envoyer des commandes au serveur. Comme le plugin Jabber, vous devez
                installer le plugin Instant Messaging pour que le plugin Jenkins IRC
                <indexterm id="I_indexterm8_d1e12180" class="endofrange" startref="ch08-im1" significance="normal">
                    <primary/>
                </indexterm>
                <indexterm id="I_indexterm8_d1e12182" class="endofrange" startref="ch08-im2" significance="normal">
                    <primary/>
                </indexterm>
                fonctionne.
            </para>
        </sect2>
    </sect1>
    <sect1 id="sect-notification-irc">
        <title>Notification IRC</title>
        <para>
            <emphasis>Rédigé par Juven Xu</emphasis>
        </para>
        <para>Internet Relay Chat (ou IRC) est une forme populaire de messagerie instantanée,
            conçue principalement pour la communication de groupes par canaux. Par exemple,
            Jenkins a
            <ulink url="http://jenkins-ci.org/content/chat">un canal
                sur Freenode
            </ulink>
            de telle façon que les utilisateurs et les développeurs peuvent échanger sur des sujets
            liés à Jenkins. Vous verrez de nombreux utilisateurs poser des questions et la plupart du temps des
            utilisateurs
            plus expérimentés fournir des réponses rapidement.
        </para>
        <para>Comme avec la messagerie instantanée avec Jabber, vous pouvez configurer
            Jenkins pour “pousser” des notifications via IRC. Quelques clients IRC tels que
            <ulink url="http://xchat.org/">xchat</ulink>
            supportent une configuration d'alerte
            de telle manière que lorsqu'un message arrive, il peut faire clignoter l'icône du panneau ou émettre un
            bip sonore. Pour mettre en place le support IRC dans Jenkins, vous devez d'abord
            installer
            <indexterm id="I_indexterm8_d1e12201" significance="normal">
                <primary>plugins</primary>
                <secondary>IRC</secondary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12206" significance="normal">
                <primary>plugin IRC</primary>
            </indexterm>
            le
            <ulink url="http://wiki.jenkins-ci.org/display/JENKINS/IRC+Plugin">plugin
                IRC
            </ulink>
            et le<ulink url="http://wiki.jenkins-ci.org/display/JENKINS/Instant+Messaging+Plugin">plugin
                Instant Messaging</ulink>. Allez simplement dans le gestionnaire de plugins par défaut, cochez
            les cases correspondantes et redémarrez ensuite Jenkins (voir<xref
                    linkend="hudson-notification-irc-plugins-install"/>).
        </para>
        <figure float="none" id="hudson-notification-irc-plugins-install">
            <title>Installation des plugins Jenkins IRC</title>
            <mediaobject id="I_mediaobject8_d1e12221">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0814.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0814.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Une fois cela fait, vous devez activer le plugin IRC plugin, et le configurer
            pour intégrer votre propre environnement. Fondamentalement, cela consiste à fournir le
            nom d'hôte et le port du serveur IRC que vous utilisez, un canal IRC
            dédié, et un surnom pour le plugin IRC. Une bonne pratique consiste à mettre en place
            un canal dédié pour les notifications CI. Ainsi, si les gens bavardent sur d'autres
            canaux, ils ne seront pas perturbés. Vous pouvez également configurer des détails
            supplémentaires dans la section Avancé. Tous ces éléments sont disponibles dans la
            page Configurer le système (voir<xref linkend="hudson-notification-irc-advanced"/>).
        </para>
        <figure float="0" id="hudson-notification-irc-advanced">
            <title>Configuration avancée des notifications IRC</title>
            <mediaobject id="I_mediaobject8_d1e12233">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0815.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0815.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>

        <para>En plus du nom d'hôte, du port, du canal, et du surnom que nous avons
            mentionnés précédemment, vous pouvez également configurer le mot de passe du serveur IRC ou celui du
            NickServ si votre environnement les nécessite. Les commandes doivent être préfixées essentiellement de
            la même façon que pour Jabber (voir<xref linkend="sect-notification-instant-messaging"/>)
            si vous souhaitez interagir avec le serveur via des messages IRC.
            Enfin, vous voudrez peut-être configurer le plugin IRC pour utiliser la commande
            <literal role="keep-together" moreinfo="none">/notice</literal>
            en lieu et place de la commande par défaut
            <literal moreinfo="none">/msg</literal>.
            <literal moreinfo="none">/notice</literal>
            est identique à
            <literal moreinfo="none">/msg</literal>
            excepté que le message sera encadré de
            tirets, ce qui évitera une réponse de la plupart des robots.
        </para>
        <para>Une fois que la configuration globale est prête, vous pouvez activer la notification
            IRC pour chaque tâche de build et mettre en place une stratégie de notification. Ouvrez
            la page de configuration de tâche de build, allez à la section Actions à la suite du build et
            cliquez sur l'option IRC notification. Si vous souhaitez configurer une stratégie de
            notification plutôt que d'utiliser celle par défaut, cliquez sur le bouton "Avancé ..."
            (voir<xref linkend="hudson-notification-irc-job"/>).
        </para>
        <figure float="0" id="hudson-notification-irc-job">
            <title>Configuration avancée de notifications IRC pour une tâche de build</title>
            <mediaobject id="I_mediaobject8_d1e12261">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0816.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0816.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Les stratégies de notification (quand et à qui envoyer des messages de notification
            sont décrites dans<xref linkend="sect-notification-instant-messaging"/>. Le plugin Jabber
            ainsi que le plugin IRC dépendent du plugin Instant Messaging. Ils partagent donc un
            certain nombre de caractéristiques fondamentales communes. Certaines options sont
            toutefois spécifiques à l'extension IRC.
            Par exemple, vous pouvez définir un canal personnalisé si vous
            n'aimez pas la valeur globale par défaut. De plus, pour un message de notification
            envoyé à un canal, vous pouvez choisir les informations à transmettre dans les messages
            de notification. Vos options ici sont le résumé du build, les changements effectués via le système de
            gestion de version, et les tests échoués.
        </para>
        <para>Une fois que vous enregistrez la configuration, tout est prêt. Basé sur
            ce que vous avez configuré, ce plugin va rejoindre les canaux IRC appropriés
            et envoyer des messages de notification pour les tâches de build.
        </para>
        <para>Par exemple, dans<xref linkend="hudson-notification-irc-xchat"/>,
            le plugin IRC rejoint le canal #ci-book sur freenode. Tout d'abord, l'utilisateur juven
            a committé quelques changements avec le message "feature x added" et le plugin IRC
            notifie tous les connectés au canal que le build a été un succès. Juven
            committe ensuite un autre changement pour la fonctionnalité y, mais cette fois le build a échoué.
            John a remarqué et corrigé l'erreur de build. Le plugin IRC déclare maintenant
            "Yippie, build fixed!" Notez que certaines lignes de cet écran sont
            soulignées, c'est parce que je me suis connecté en tant qu'utilisateur "juven" et j'ai configuré
            mon client IRC XChat pour mettre en évidence les messages contenant
            <indexterm id="I_indexterm8_d1e12277" class="endofrange" startref="ch08-irc1" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12279" class="endofrange" startref="ch08-irc3" significance="normal">
                <primary/>
            </indexterm>
            mon surnom.
        </para>
        <figure float="none" id="hudson-notification-irc-xchat">
            <title>Messages de notification IRC en action</title>
            <mediaobject id="I_mediaobject8_d1e12285">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0817.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0817.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
    </sect1>
    <sect1 id="sect-notification-desktop">
        <title>Notificateurs de bureau</title>
        <para>Les
            <indexterm class="startofrange" id="ch08-desktop1" significance="normal">
                <primary>notificateurs de bureau</primary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-desktop2" significance="normal">
                <primary>notifications</primary>
                <secondary>notificateurs de bureau</secondary>
            </indexterm>
            meilleures stratégies de notification push s'intègrent en douceur dans
            l'environnement de travail quotidien du développeur. C'est pourquoi la messagerie instantanée peut
            être une stratégie efficace si les développeurs ont déjà l'habitude d'utiliser des
            messageries instantanées pour les autres activités liées au travail.
        </para>
        <para>Les outils de notification de bureau entrent aussi dans cette catégorie. Les
            outils de notification bureau sont des outils qui s'exécutent localement sur l'ordinateur du développeur,
            soit comme une application indépendante ou un widget, soit dans le cadre de
            l'outil de développement du développeur (IDE).
        </para>

        <para>Si vous utilisez
            <indexterm id="I_indexterm8_d1e12308" significance="normal">
                <primary>plugin Eclipse</primary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12311" significance="normal">
                <primary>plugins</primary>
                <secondary>Eclipse</secondary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12316" significance="normal">
                <primary>Eclipse</primary>
                <secondary>notificateurs de bureau avec</secondary>
            </indexterm>
            Eclipse, le
            <ulink url="http://code.google.com/p/hudson-eclipse/">plugin Eclipse
                Jenkins
            </ulink>
            affiche une icône de santé au bas de la fenêtre Eclipse.
            Si vous cliquez sur cette icône, vous pouvez voir une vue détaillée des projets
            Jenkins (voir<xref linkend="fig-hudson-notification-eclipse"/>). Dans
            les préférences Eclipse, vous indiquez l'URL de votre serveur Jenkins
            avec tous les détails d'authentification requis. La configuration est assez simple,
            cependant, vous ne pouvez vous connecter à une instance unique Jenkins pour un
            espace de travail Eclipse donné.
        </para>
        <figure float="none" id="fig-hudson-notification-eclipse">
            <title>Notifications Jenkins dans Eclipse</title>
            <mediaobject id="I_mediaobject8_d1e12330">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0818.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0818.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>
            Si vous utilisez
            l'IDE NetBeans
            <indexterm>
                <primary>NetBeans</primary>
            </indexterm>
            ,
            vous avez déjà l'intégration avec Hudson et Jenkins.
            Ouvrez la fenêtre
            <guilabel>Services</guilabel>
            et ajoutez des serveurs sous<guilabel>Hudson Builders</guilabel>.
            (Si vous ouvrez un projet Maven dont la section
            <code>ciManagement</code>
            indique
            <code>hudson</code>
            ou
            <code>jenkins</code>
            sous<code>system</code>, le serveur correspondant
            sera enregistré automatiquement.)
            Cette intégration a des caractéristiques différentes au-delà des notifications de build dans la barre
            d'état,
            telles que l'intégration dans la fenêtre<guilabel>Tests Results</guilabel>, l'affichage des journaux
            de build et des journaux de changement, la navigation dans l'espace de travail, et un assistant de
            configuration de tâche de build.
        </para>
        <figure id="fig-hudson-netbeans">
            <title>Connection Jenkins dans NetBeans</title>
            <mediaobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/hudson-netbeans.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Le
            <indexterm class="startofrange" id="ch08-tray1" significance="normal">
                <primary>plugin Tray Application</primary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-tray2" significance="normal">
                <primary>plugins</primary>
                <secondary>plugin Tray Application</secondary>
            </indexterm>
            plugin Jenkins Tray Application (voir<xref linkend="fig-hudson-tray-launch"/>)
            vous permet de démarrer une petite application cliente Java
            à l'aide de Java Web Start à partir de votre tableau de bord de Jenkins.
        </para>
        <figure float="0" id="fig-hudson-tray-launch">
            <title>Lancement de l'application Jenkins Tray</title>
            <mediaobject id="I_mediaobject8_d1e12351">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0819.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0819.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Cette application se trouve dans votre barre d'état du système et vous permet
            de visualiser l'état courant de vos builds en un coup d'œil. Elle apporte également des fenêtres pop-up
            vous informant des nouveaux échecs de build (voir<xref linkend="fig-hudson-tray"/>).
        </para>
        <figure float="0" id="fig-hudson-tray">
            <title>Exécution de l'application Jenkins Tray</title>
            <mediaobject id="I_mediaobject8_d1e12363">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0820.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0820.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>C'est certainement une application utile mais elle souffre de quelques
            limitations. Au moment de la rédaction, l'application Jenkins Tray ne supporte pas
            l'accès aux serveurs sécurisés Jenkins. En outre, le développeur doit
            se souvenir de la redémarrer chaque matin. Cela peut sembler un problème mineur,
            mais en général, quand il s'agit de stratégies de notification, moins vous en
            demandez à vos développeurs meilleure est la solution.
        </para>
        <para>Une des meilleures options pour les notifications bureau Jenkins est d'utiliser un
            service comme Notifo (voir<xref linkend="sect-notifo"/>) qui fournit
            des clients pour bureaux et mobiles. Nous allons voir comment cela fonctionne en détail dans
            <indexterm id="I_indexterm8_d1e12374" class="endofrange" startref="ch08-tray1" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12376" class="endofrange" startref="ch08-tray2" significance="normal">
                <primary/>
            </indexterm>
            la prochaine section.
        </para>
    </sect1>
    <sect1 id="sect-notifo">
        <title>Notifications via Notifo</title>
        <para>
            <ulink url="http://www.notifo.com">Notifo</ulink>
            est
            <indexterm class="startofrange" id="ch08-notifo" significance="normal">
                <primary>Notifo</primary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-phone" significance="normal">
                <primary>notifications</primary>
                <secondary sortas="smartphones">vers les smartphones</secondary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-phone2" significance="normal">
                <primary>smartphones, notifications vers</primary>
            </indexterm>
            un service rapide et économique pour envoyer en temps réel
            des notifications vers votre smartphone ou votre bureau. Dans le contexte d'un serveur
            Jenkins, vous pouvez l'utiliser pour mettre en place gratuitement ou à faible coût des
            notifications en temps réel pour vos résultats de builds Jenkins.
            Les comptes individuels (dont vous avez besoin pour être
            capable de recevoir des notifications) sont gratuits. Vous avez besoin de mettre en place un compte service
            pour envoyer des messages de notification de votre serveur Jenkins. C'est ici
            que Notifo devient payant, même si lors de la rédaction un compte
            service peut envoyer jusqu'à 10 000 notifications par mois gratuitement,
            ce qui est habituellement largement suffisant pour une instance moyenne Jenkins. Un des points
            forts d'un service de notification en temps réel comme Notifo est que
            les messages de notification peuvent être envoyés à ces mêmes utilisateurs sur différents dispositifs ;
            en particulier les smartphones et les clients de bureau.
        </para>
        <para>La mise en place des notifications Jenkins avec Notifo est relativement
            simple. Tout d'abord, allez sur le site Notifio et inscrivez vous pour créer un
            compte. Chaque membre de l'équipe qui veut être notifié aura besoin de son propre
            compte Notifo. Ils auront également besoin d'installer le client Notifo sur ​​chaque appareil
            sur lequel ils ont besoin de recevoir des notifications. Au moment de
            l'écriture de ce livre, les clients Notifo étaient disponibles pour Windows et Mac OS X,
            ainsi que pour les iPhones. Le support support pour les smartphones Linux et autres est en
            cours.
        </para>
        <para>Ensuite, vous devez configurer un compte de service Notifo pour votre serveur
            Jenkins. Vous pouvez faire cela avec un de vos comptes développeur, ou créer un
            nouveau compte à cet effet. Connectez-vous au site Notifo, et aller au
            menu My Services. Ici, cliquez sur Create Service (voir<xref
                    linkend="fig-hudson-notification-notifo-service"/>)
            et remplissez les champs. Le plus important est que le nom d'utilisateur du service doit être
            unique. Vous pouvez également spécifier l'URL du site et l'URL de notification par défaut
            pour pointer vers votre instance Jenkins pour que les utilisateurs puissent ouvrir la console
            Jenkins en cliquant sur le message de notification.
        </para>
        <figure float="0" id="fig-hudson-notification-notifo-service">
            <title>Créer un service Notifo pour votre instance Jenkins</title>
            <mediaobject id="I_mediaobject8_d1e12407">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0821.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0821.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Pour recevoir des messages de notification à partir du serveur Jenkins, les développeurs
            ont maintenant besoin de souscrire à ce service. Vous pouvez ensuite ajouter les développeurs à la
            liste des abonnés sur la page Subscribers du service en leur envoyant
            des demandes de souscription. Une fois que le service a été créé et que les utilisateurs sont
            tous abonnés, vous pouvez configurer votre projet pour envoyer des notifications
            Notifo (voir<xref linkend="fig-hudson-notification-notifo-config"/>). Vous avez besoin de fournir
            le nom d'utilisateur API du service de Jenkins-que vous mis en place, ainsi que l'API
            Secret. Vous pouvez les voir tous les deux dans le tableau de bord du service Notifo.
        </para>
        <figure float="0" id="fig-hudson-notification-notifo-config">
            <title>Configurer les notifications Notifo dans votre tâche de build Jenkins</title>
            <mediaobject id="I_mediaobject8_d1e12419">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0822.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0822.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Une fois que cela est mis en place, Jenkins enverra en quasi temps-réel
            les notifications d'échecs de build à tous les clients Notifo que le développeur a
            lancé, que ce soit sur un bureau ou sur un appareil mobile (voir<xref linkend="fig-hudson-notifo-iphone"/>).
        </para>
        <figure float="0" id="fig-hudson-notifo-iphone">
            <title>Recevoir une notification Notifo sur un iPhone</title>
            <mediaobject id="I_mediaobject8_d1e12431">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0823.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0823.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Au moment de l'écriture de ce livre, les stratégies de notification sophistiquées ne sont
            pas prises en charge - vous ne pouvez fournir qu'une liste de noms d'utilisateurs Notifo qui doivent être
            notifiés. Néanmoins, cela reste un outil de notification très efficace pour les développeurs en
            <indexterm id="I_indexterm8_d1e12438" class="endofrange" startref="ch08-desktop1" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12440" class="endofrange" startref="ch08-desktop2" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12442" class="endofrange" startref="ch08-notifo" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12444" class="endofrange" startref="ch08-phone2" significance="normal">
                <primary/>
            </indexterm>
            ligne de front.
        </para>
    </sect1>
    <sect1 id="sect-notification-mobile">
        <title>Notifications mobiles</title>
        <para>Si votre
            <indexterm id="I_indexterm8_d1e12453" significance="normal">
                <primary>notifications</primary>
                <secondary sortas="mobile devices">vers les appareils mobiles</secondary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12458" significance="normal">
                <primary>
                    appareils mobiles, notifications vers
                </primary>
            </indexterm>
            serveur Jenkins est visible sur Internet (même si vous avez
            mis en place une authentification sur votre serveur Jenkins), vous pouvez aussi surveiller vos
            builds via votre appareil mobile iPhone ou Android. L'application gratuite Hudson Helper
            (voir<xref linkend="fig-hudson-notification-iphone"/>)
            par exemple, vous permet de lister vos tâches de builds actuelles (soit l'ensemble des tâches de
            builds sur le serveur, ou seulement les tâches de build d'une certaine vue). Vous pouvez
            également afficher les détails d'une tâche de build particulière, y compris son statut
            actuel, les tests en échec et le temps de build, et même démarrer et arrêter
            les builds.
        </para>
        <figure float="0" id="fig-hudson-notification-iphone">
            <title>Utiliser l'application iPhone Hudson Helper</title>
            <mediaobject id="I_mediaobject8_d1e12467">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0824.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0824.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Pour les téléphones Android, vous pouvez également installer le widget Hudson Mood
            qui fournit également des mises à jour et des alertes sur les échecs de build.
        </para>
        <para>Notez que ces applications mobiles s'appuient sur une connexion de données, de sorte
            qu'ils travaillent généralement bien localement, mais vous ne devriez pas compter sur eux
            si le développeur est à
            <indexterm id="I_indexterm8_d1e12476" class="endofrange" startref="ch08-phone" significance="normal">
                <primary/>
            </indexterm>
            l'extérieur.
        </para>
    </sect1>
    <sect1 id="sect-notification-sms">
        <title>Notifications SMS</title>
        <para>Ces
            <indexterm class="startofrange" id="ch08-sms1" significance="normal">
                <primary>notifications</primary>
                <secondary>messages SMS</secondary>
            </indexterm>
            <indexterm class="startofrange" id="ch08-sms2" significance="normal">
                <primary>messages SMS, notifications via</primary>
            </indexterm>
            temps-ci, le SMS est un autre canal de communication universel qui
            a l'avantage supplémentaire d'atteindre les personnes même quand elles ne sont pas
            bureau. Pour un ingénieur de build, ce peut être un excellent moyen de surveiller des builds
            critiques, même si les développeurs ou chefs d'équipe sont loin de leur
            bureau.
        </para>
        <para>
            <ulink url="http://en.wikipedia.org/wiki/SMS_gateway">Les passerelles
                SMS
            </ulink>
            sont des services qui permettent
            <phrase role="keep-together">d'envoyer</phrase>
            des notifications SMS via des adresses emails formattées spécialement (par exemple,
            <emphasis>123456789@mysmsgateway.com</emphasis>
            pourrait envoyer un message SMS
            à 123456789). Beaucoup de vendeurs mobiles offrent ce service, tout comme beaucoup de
            prestataires de services tiers. Il n'y a aucune prise en charge intégrée pour les passerelles
            SMS dans Jenkins, mais la fonctionnalité de base de ces passerelles rend
            l'intégration relativement simple : il vous suffit d'ajouter les adresses emails spéciales à
            la liste de notification normale. Sinon, en utilisant la configuration email
            avancée, vous pouvez configurer une règle distincte contenant uniquement les adresses
            email SMS (voir<xref linkend="fig-hudson-sms-notification-config"/>). Procéder ainsi rend
            plus facile d'affiner le contenu du message pour adhérer au format des messages
            SMS.
        </para>
        <figure float="0" id="fig-hudson-sms-notification-config">
            <title>Envoyer des notifictions SMS via une passerelle SMS</title>
            <mediaobject id="I_mediaobject8_d1e12508">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0825.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0825.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Une fois que vous avez fait cela, vos utilisateurs recevront une notification rapide
            des résultats de build sous forme de messages SMS (voir<xref linkend="fig-hudson-sms-notification"/>). Le
            principal inconvénient de cette
            approche est sans doute que ce n'est pas gratuit, et nécessite l'utilisation d'un
            service commercial tiers. Cela dit, c'est vraiment la seule
            technique de notification capable d'atteindre les développeurs quand ils sont hors de portée
            d'Internet ou qu'ils n'ont pas de smartphone activé. En effet, cette
            technique est populaire parmi les administrateurs système, et peut être très utile
            pour certaines tâches de
            <indexterm id="I_indexterm8_d1e12517" class="endofrange" startref="ch08-sms1" significance="normal">
                <primary/>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12519" class="endofrange" startref="ch08-sms2" significance="normal">
                <primary/>
            </indexterm>
            build.
        </para>
        <figure float="0" id="fig-hudson-sms-notification">
            <title>Recevoir des notifications via SMS</title>
            <mediaobject id="I_mediaobject8_d1e12525">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0826.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0826.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
    </sect1>
    <sect1 id="sect-notification-noise">
        <title>Du bruit</title>
        <para>Si votre
            <indexterm id="I_indexterm8_d1e12535" significance="normal">
                <primary>notifications</primary>
                <secondary>sons dans</secondary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12540" significance="normal">
                <primary>sons, dans les notifications</primary>
            </indexterm>
            instance Jenkins s'exécute sur une machine qui est
            physiquement située à proximité de l'équipe de développement, vous pouvez aussi vouloir
            ajouter les sons dans l'ensemble des stratégies de notification. Cela peut être une
            stratégie efficace pour les petites équipes co-localisées, mais cela devient plus difficile
            si le serveur de build est mis en place sur une machine virtuelle ou ailleurs dans le
            bâtiment.
        </para>
        <para>Il y a deux façons d'intégrer des retours audio dans votre processus de build
            Jenkins: le plugin Jenkins Sounds et le plugin Jenkins Speaks.
            Les deux peuvent être installés via la page du gestionnaire de plugins de la manière habituelle
            .
        </para>
        <para>Le
            <indexterm id="I_indexterm8_d1e12548" significance="normal">
                <primary>plugins</primary>
                <secondary>Sounds</secondary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12553" significance="normal">
                <primary>Sounds plugin</primary>
            </indexterm>
            plugin Jenkins Sounds est le plus flexible des deux. Il
            vous permet de construire une stratégie de communication détaillée basée sur le dernier
            résultat de build et aussi (facultatif) sur le résultat du précédent build
            (voir<xref linkend="fig-hudson-sounds"/>). Par exemple, vous pouvez configurer
            Jenkins pour jouer un son la première fois qu'un build échoue, un son différent
            si le build échoue une seconde fois, et encore un autre son lorsque le build est
            corrigé.
        </para>
        <figure float="0" id="fig-hudson-sounds">
            <title>Configurer les règles de Jenkins Sounds dans une tâche de build</title>
            <mediaobject id="I_mediaobject8_d1e12562">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0827.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0827.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Pour le mettre en place, vous devez cocher Jenkins Sounds à la
            section des actions post-build dans la page de configuration de la tâche de build. Vous pouvez
            ajouter autant de règles de configuration audio que vous le souhaitez. L'ajout d'une règle est assez
            simple. Vous devez tout d'abord choisir quel résultat de build va déclencher le
            son. Vous devez également spécifier les résultats de build précédents pour lequel la présente
            règle est applicable: Non Construit (NB), Avorté (Ab), Échec (Fa),
            Non-positif (ONU) ou Réussi (Su).
        </para>
        <para>Le plugin Jenkins Sounds propose une grande liste de sons prédéfinis
            qui offrent généralement beaucoup de choix pour les administrateurs de build
            les plus exigeants. Vous pouvez cependant ajouter votre propre son à la liste si vous le
            voulez. Les fichiers sonores des sons sont stockés dans un fichier ZIP ou JAR sous une structure
            plate (pas de sous-répertoire). La liste des sons
            proposés par le plugin est tout simplement la liste des noms de fichiers auxquels on retire l'extension.
            Le plugin supporte les formats AIFF, AU, et WAV.
        </para>
        <para>Dans la page de configuration système, vous pouvez indiquer à Jenkins un nouveau fichier d'archive de
            sons en utilisant la notation
            <filename moreinfo="none">http://</filename>
            si votre archive de sons est disponible sur un serveur Web local, ou
            la notation
            <filename moreinfo="none">file://</filename>
            s'il est disponible
            en local (voir<xref linkend="fig-hudson-sounds-config"/>). Une fois que
            vous avez sauvé la configuration, vous pouvez tester les sons de votre archive
            via le bouton Test Sound dans la section Avancé.
        </para>
        <figure float="none" id="fig-hudson-sounds-config">
            <title>Configurer Jenkins Sounds</title>
            <mediaobject id="I_mediaobject8_d1e12584">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0828.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0828.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Le plugin Jenkins Sounds est un excellent choix si vous voulez
            compléter vos techniques de notification plus classiques. Les sons courts et
            reconnaissables sont un excellent moyen pour attirer l'attention d'un développeur et
            permettre à l'équipe de savoir que quelque chose doit être réparé. Ils seront alors un peu
            plus attentifs lorsque les notifications plus détaillées suivront.
        </para>
        <para>Une
            <indexterm id="I_indexterm8_d1e12593" significance="normal">
                <primary>notifications</primary>
                <secondary>parlées</secondary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12598" significance="normal">
                <primary>Speaks plugin</primary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12601" significance="normal">
                <primary>plugins</primary>
                <secondary>Speaks</secondary>
            </indexterm>
            autre option est le plugin Jenkins
            Speaks. Avec ce plugin, vous
            pouvez demander à Jenkins de diffuser une annonce personnalisée (avec une voix très robotique)
            lorsque votre build échoue (voir<xref linkend="fig-hudson-speaks"/>).
            Vous pouvez configurer le message exact à l'aide de Jelly. Jelly est un langage de script
            basé sur XML largement utilisé dans les niveaux inférieurs de Jenkins.
        </para>
        <figure float="none" id="fig-hudson-speaks">
            <title>Configurer Jenkins Speaks</title>
            <mediaobject id="I_mediaobject8_d1e12613">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0829.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0829.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>L'avantage de cette approche réside dans sa précision: puisque vous pouvez
            utiliser des variables Jenkins dans le script Jelly, vous pouvez demander à Jenkins de dire
            ce que vous voulez sur l'état de la construction. Voici un simple exemple :
        </para>
        <programlisting id="I_programlisting8_d1e12620" format="linespecific">&lt;j:choose&gt;
            &lt;j:when test="${build.result!='SUCCESS'}"&gt;
            Votre attention, s'il vous plait. Le projet ${build.project.name} a échoué
            &lt;j:if test="${build.project.lastBuild.result!='SUCCESS'}"&gt; encore&lt;/j:if&gt;
            &lt;/j:when&gt;
            &lt;j:otherwise&gt;&lt;!-- Ne rien dire --&gt;&lt;/j:otherwise&gt;
            &lt;/j:choose&gt;</programlisting>
        <para>Si vous laissez ce champ vide, le plugin va utiliser un modèle
            par défaut que vous pouvez configurer dans la page de configuration du système. En fait,
            c'est généralement une bonne idée de faire cela, et seulement d'utiliser script spécifique
            à un projet si c'est nécessaire.
        </para>
        <para>L'inconvénient est que la voix robotique est parfois peut être un peu difficile
            à comprendre. Pour cette raison, c'est une bonne idée de commencer votre
            annonce par une phrase générique telle que "Votre attention s'il vous plaît», ou à
            combiner Jenkins Speak avec le plugin Jenkins Sounds, de façon à attirer l'attention des développeurs
            avant que le message réel ne soit diffusé. L'utilisation de traits d'union dans
            les noms de projets (par exemple,
            <emphasis>jeu-de-vie</emphasis>
            plutôt que
            <emphasis>jeudevie</emphasis>) aidera aussi le plugin à savoir comment
            prononcer vos noms de projet.
        </para>
        <para>Ces deux approches sont utiles pour les petites équipes, mais peuvent être limitées
            pour les plus grosses, lorsque le serveur n'est pas physiquement situé à
            proximité de l'équipe de développement. Les futures versions pourront supporter la lecture
            de sons sur une machine séparée, mais au moment de la rédaction de ce livre ce n'est
            pas encore disponible.
        </para>
    </sect1>
    <sect1 id="sect-notification-extreme">
        <title>Appareils de retour extrèmes</title>
        <para>De nombreux outils de notification et stratégies plus imaginatives existent. Il
            y a de la place pour l'improvisation si vous êtes prêt à improviser
            un peu avec l'électronique. Cela inclut des appareils tels que les orbes d'ambiance,
            les lampes de lave, les feux de circulation, ou d'autres appareils USB plus exotiques.
            Le radar de build (voir<xref linkend="sect-build-radiator"/>) tombe aussi
            dans cette catégorie si on le projette sur un écran assez grand.
        </para>
        <para>Un
            <indexterm id="I_indexterm8_d1e12643" significance="normal">
                <primary>notifications</primary>
                <secondary sortas="Nabaztag">utilisant Nabaztag</secondary>
            </indexterm>
            appareil qui s'intègre très bien avec avec Jenkins est le
            Nabaztag. Le Nabaztag (voir<xref linkend="fig-hudson-nabaztag"/>) est un
            lapin robot WiFi très populaire qui peut faire clignoter des lumières colorées, jouer
            de la musique, ou même de parler. Un des avantages du Nabaztag, c'est qu'étant donné qu'il
            fonctionne en Wifi, il n'est pas contraint à être situé à proximité du serveur de build
            et fonctionnera même si votre instance Jenkins est dans une salle de serveurs ou sur une
            machine virtuelle. En ce qui concerne les appareils de retour extrêmes, ces petits
            compagnons sont difficiles à battre.
        </para>
        <figure float="0" id="fig-hudson-nabaztag">
            <title>Un Nabaztag</title>
            <mediaobject id="I_mediaobject8_d1e12654">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0830.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0830.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Et
            <indexterm id="I_indexterm8_d1e12661" significance="normal">
                <primary>plugin Nabaztag</primary>
            </indexterm>
            <indexterm id="I_indexterm8_d1e12664" significance="normal">
                <primary>plugins</primary>
                <secondary>Nabaztag</secondary>
            </indexterm>
            encore mieux, il existe un plugin Jenkins pour le
            Nabaztag. Une fois que vous avez installé le plugin Nabaztag et redémarré
            Jenkins, il est facile à configurer. Dans la page de configuration principale de Jenkins, rendez-vous
            à la section Paramètres globaux de Nabaztag et entrez le numéro de série et
            jeton secret pour votre lapin électronique (voir<xref linkend="fig-hudson-nabaztag-config"/>).
            Vous pouvez également fournir des
            réglages par défaut sur ​​la façon dont votre lapin de build devrait réagir aux changements dans
            l'état de build (doit il signaler sur les départs ou succès de build, par
            exemple), quelle voix utiliser, et quel message dire quand un
            build échoue, réussit, est fixé, ou échoue à nouveau. Puis, pour activer
            les notifications Nabaztag pour une tâche de build particulière, vous devez cocher
            l'option de publication Nabaztag dans la configuration de votre tâche de build.
            <phrase role="keep-together">Selon</phrase>
            votre environnement par exemple,
            vous voulez ou non que tous vos builds envoient des notifications à votre
            Nabaztag.
        </para>
        <figure float="0" id="fig-hudson-nabaztag-config">
            <title>Configurer votre Nabaztag</title>
            <mediaobject id="I_mediaobject8_d1e12678">
                <imageobject role="print">
                    <imagedata fileref="figs/print/jtdg_0831.pdf" format="PDF"/>
                </imageobject>
                <imageobject role="web">
                    <imagedata fileref="figs/web/jtdg_0831.png" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>À l'exception notable du radar de build, nombre de ces
            dispositifs ont des limitations semblables aux plugins Jenkins Speaks et Jenkins Sounds
            (voir<xref linkend="sect-notification-noise"/>)-ils sont mieux
            adaptés pour les petites équipes, co-localisées, qui travaillant sur un nombre limité de
            projets. Néanmoins, quand ils fonctionnent, ils peuvent être un complément utile à
            votre stratégie de notification générale.
        </para>
    </sect1>
    <sect1 id="sect-notification-conclusion">
        <title>Conclusion</title>
        <para>La notification est une partie essentielle de votre stratégie globale d'intégration continue. Après tout,
            un build a échoué a peu d'utilité s'il n'y a personne à l'écoute. Ce n'est pas non plus
            un problème universel. Vous devez penser à votre
            organisation et adapter votre stratégie pour répondre à la culture locale de l'entreprise
            et de l'ensemble des outils utilisés.
        </para>
        <para>En effet, il est important de définir et de mettre en œuvre une stratégie de notification
            bien pensée qui convient à votre environnement. Le mail, par exemple, est
            omniprésent et sera donc l'épine dorsale de nombreuses stratégies de
            notification. Si vous travaillez dans une grande équipe ou avec un responsable technique occupé,
            vous devrez peut-être envisager de mettre en place une stratégie progressive basée sur
            les options de messagerie avancées (voir<xref linkend="sect-notification-advanced-email"/>). Vous devrez
            compléter
            cette dernière avec une des stratégies plus actives, telles que la messagerie instantanée ou
            la notification de bureau. Si votre équipe utilise déjà un canal de discussion IRC pour
            communiquer, essayez de l'intégrer dans votre stratégie de notification
            aussi. Enfin, la notification par SMS est une grande stratégie pour les tâches de build vraiment critiques.
        </para>
        <para>Vous devez également veiller à ce que vous ayez à la fois des stratégies de notification
            actives et passives. Par exemple, un radar de build visible ou un
            appareil de retour extrême, envoient le message important à l'équipe
            que la correction des builds est une tâche prioritaire et peut aider à installer une culture plus agile
            à l'équipe.
        </para>
    </sect1>
</chapter>