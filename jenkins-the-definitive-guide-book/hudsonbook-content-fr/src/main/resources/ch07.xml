<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="chapter-security">
  <title>Sécuriser Jenkins</title>

  <sect1 id="sect-security-introduction">
    <title>Introduction</title>

    <para><indexterm class="startofrange" id="ch07-sec" significance="normal">
        <primary>securité</primary>
      </indexterm><indexterm id="I_indexterm7_d1e10038" significance="normal">
        <primary>autorisation</primary>

        <seealso>sécurité</seealso>
      </indexterm>Jenkins supporte plusieurs modèles de sécurité, et peut
    s'intégrer avec différents gestionnaires d'utilisateurs. Dans les petites
    organisations, où les développeurs travaillent proches les uns des autres,
    la sécurité de votre machine Jenkins n'est peut-être pas un gros problème
    — vous pourriez juste vouloir éviter que des utilisateurs non identifiés
    n'altèrent vos configurations de tâches de build. Pour de plus importantes
    organisations, avec de multiples équipes, une approche plus stricte
    pourrait être nécessaire, dans laquelle seuls les membres de l'équipe et
    les administrateurs systèmes ont les droits pour modifier la configuration
    des tâches de build. Et dans des situations où Jenkins serait exposé à une
    audience plus large, comme un site web interne d'une entreprise, ou même
    sur Internet, certaines tâches de build pourraient être visibles à tous
    les utilisateurs alors que d'autres nécessiteraient d'être cachées aux
    utilisateurs non autorisés.</para>

    <para>Dans ce chapitre, nous regarderons comment configurer différentes
    configurations de sécurité dans Jenkins, pour différents environnements et
    circonstances.</para>
  </sect1>

  <sect1 id="sect-security-activating">
    <title>Activer la sécurité dans Jenkins</title>

    <para>Configurer <indexterm id="I_indexterm7_d1e10051"
        significance="normal">
        <primary>securité</primary>

        <secondary>activer</secondary>
      </indexterm> une sécurité basique dans Jenkins est assez simple. Allez
    dans la page de configuration principale et sélectionnez la case à cocher
    Activer la sécurité (voir <xref
    linkend="fig-hudson-enabling-security" />). Ceci affiche plusieurs options
    que nous allons expliquer en détails dans ce chapitre. La première
    <indexterm id="I_indexterm7_d1e10059" significance="normal">
        <primary>securité</primary>

        <secondary>domaine de sécurité</secondary>
      </indexterm>section, domaine de sécurité, définit où Jenkins regardera
    pendant l'authentification, et inclut des options telles que l'utilisation
    d'utilisateurs stockés dans un serveur LDAP, en utilisant le compte
    utilisateur Unix sous-jacent (en supposant, bien sûr, que Jenkins est
    exécuté sur une machine Unix), ou utilisant une simple base de données
    embarquée gérée par Jenkins.</para>

    <para>La <indexterm id="I_indexterm7_d1e10067" significance="normal">
        <primary>securité</primary>

        <secondary>autorisation</secondary>
      </indexterm><indexterm id="I_indexterm7_d1e10072" significance="normal">
        <primary>autorisation</primary>
      </indexterm>seconde section, Autorisations, détermine ce que les
    utilisateurs peuvent faire une fois qu'ils sont connectés. Cela va de
    simples options comme "Tout le monde a accès à toutes les fonctionnalités"
    ou "Les utilisateurs connectés peuvent tout faire" à des rôles plus
    sophistiqués ou des politiques d'autorisations par projet.</para>

    <figure float="0" id="fig-hudson-enabling-security">
      <title>Activer la sécurité dans Jenkins</title>

      <mediaobject id="I_mediaobject7_d1e10079">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0701.pdf" format="PDF" />
        </imageobject>

        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0701.png" format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Dans la fin de ce chapitre, nous regarderons comment configurer la
    sécurité Jenkins pour un certain nombre de scénarii courants.</para>
  </sect1>

  <sect1 id="hudson-security-simple">
    <title>Sécurité simple dans Jenkins</title>

    <para>Le <indexterm class="startofrange" id="ch07-none1"
        significance="normal">
        <primary>securité</primary>

        <secondary>autorisation</secondary>

        <tertiary>pas de restrictions sur</tertiary>
      </indexterm><indexterm class="startofrange" id="ch07-none2"
        significance="normal">
        <primary>autorisation</primary>

        <secondary>pas de restrictions sur</secondary>
      </indexterm><indexterm id="I_indexterm7_d1e10103" significance="normal">
        <primary>utilisateurs</primary>

        <secondary>autorisation pour</secondary>

        <see>autorisation</see>
      </indexterm>modèle de sécurité le plus simple disponible dans Jenkins
    permet aux utilisateurs authentifiés de faire tout ce qu'ils veulent,
    alors que les utilisateurs non authentifiés auront seulement une vue en
    lecture seule de leurs tâches de build. C'est super pour les petites
    équipes - les développeurs peuvent gérer les tâches de construction, alors
    que les autres utilisateurs (testeur, analyste métier, responsable de
    projet etc.) peuvent accéder aux tâches de build pour voir l'état du
    projet. En effet, certaines tâches pourraient même être configurées
    uniquement dans ce but, affichant les résultats de tests d'acceptation
    automatisés ou des métriques de qualité de code, par exemple.</para>

    <para>Vous pouvez mettre en place ce type de configuration en choisissant
    “Les utilisateurs connectés peuvent tout faire” dans la section
    Autorisations. Il y a plusieurs façons dans Jenkins pour authentifier les
    utilisateurs (voir <xref linkend="sect-security-realms" />), mais pour cet
    exemple, nous allons utiliser l'option la plus simple, qui est d'utiliser
    <indexterm id="I_indexterm7_d1e10115" significance="normal">
        <primary>sécurité</primary>

        <secondary>domaines de sécurité</secondary>

        <tertiary>base de données utilisateurs interne à Jenkins</tertiary>
      </indexterm><indexterm id="I_indexterm7_d1e10122" significance="normal">
        <primary>base de données utilisateurs</primary>
      </indexterm><indexterm id="I_indexterm7_d1e10125" significance="normal">
        <primary>base de données</primary>

        <seealso>sécurité, domaines de sécurité</seealso>
      </indexterm><indexterm id="I_indexterm7_d1e10130" significance="normal">
        <primary>base de données</primary>

        <secondary>base de données utilisateurs</secondary>
      </indexterm>la base de données intégrée à Jenkins (voir <xref
    linkend="hudson-users-internal" />). C'est la configuration illustrée dans
    <xref linkend="fig-hudson-enabling-security" />.</para>

    <para>Assurez-vous <indexterm id="I_indexterm7_d1e10142"
        significance="normal">
        <primary>sécurité</primary>

        <secondary>domaines de sécurité</secondary>

        <tertiary>activer les connexions</tertiary>
      </indexterm>de cocher l'option "Autoriser les utilisateurs à se
    connecter". Cette option affichera un lien Se connecter en haut de l'écran
    permettant aux utilisateurs de créer leurs propres comptes (voir <xref
    linkend="fig-hudson-user-signup" />). C'est une bonne idée pour les
    développeurs d'utiliser ici leur nom de gestionnaire de sources : dans ce
    cas, Jenkins sera capable de retrouver quels utilisateurs ont contribué
    aux changements qui ont déclenché un build particulier.</para>

    <figure float="0" id="fig-hudson-user-signup">
      <title>La page de connexion Jenkins</title>

      <mediaobject id="I_mediaobject7_d1e10155">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0702.pdf" format="PDF" />
        </imageobject>

        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0702.png" format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Cette approche est évidemment un peu trop simple pour beaucoup de
    situations — il est utile pour les petites équipes de travailler en forte
    proximité, où le but est de savoir le changement de qui a déclenché (ou
    cassé) un build particulier, plutôt que de gérer l'accès de façon plus
    restrictive. Dans les sections suivantes, nous discuterons de deux aspects
    orthogonaux de la sécurité Jenkins : identifier vos utilisateurs (domaines
    de sécurité) et déterminer ce qu'ils sont autorisés à faire<indexterm
        class="endofrange" id="I_indexterm7_d1e10162" significance="normal"
        startref="ch07-none1">
        <primary></primary>
      </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10164"
        significance="normal" startref="ch07-none2">
        <primary></primary>
      </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10166"
        significance="normal" startref="ch07-sec">
        <primary></primary>
      </indexterm> (Autorisation).</para>
  </sect1>

  <sect1 id="sect-security-realms">
    <title id="sec-identifying-users">Domaines de sécurité — Identifier les
    utilisateurs Jenkins</title>

    <para>Jenkins vous permet d'identifier et de gérer les utilisateurs de
    plusieurs façons, depuis une simple base de données intégrée pour les
    petites équipes jusqu'à l'intégration avec des annuaires d'entreprise,
    avec de nombreuses autres options entre les deux.</para>

    <sect2 id="hudson-users-internal">
      <title>Utiliser la base de données intégrée à Jenkins</title>

      <para>Le <indexterm class="startofrange" id="ch07-internal"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>domaines de sécurité</secondary>

          <tertiary>base de données utilisateurs interne à Jenkins</tertiary>
        </indexterm><indexterm class="startofrange" id="ch07-internal2"
          significance="normal">
          <primary>base de données utilisateurs</primary>
        </indexterm><indexterm class="startofrange" id="ch07-internal3"
          significance="normal">
          <primary>base de données</primary>

          <secondary>base de données utilisateurs</secondary>
        </indexterm>moyen le plus simple pour gérer des comptes utilisateurs
      dans Jenkins est d'utiliser la base de données interne de Jenkins. C'est
      une bonne option si vous voulez garder les choses simples, car peu de
      configuration est nécessaire. Les utilisateurs qui ont besoin de se
      connecter au serveur Jenkins peuvent s'enregistrer et créer un compte
      par eux-mêmes, et, en fonction du modèle de sécurité choisi, un
      <indexterm id="I_indexterm7_d1e10195" significance="normal">
          <primary>administrateur</primary>

          <secondary sortas="Jenkins">pour la base de données utilisateurs
          interne de Jenkins</secondary>
        </indexterm><indexterm id="I_indexterm7_d1e10200"
          significance="normal">
          <primary>utilisateurs</primary>

          <secondary>administrateur</secondary>

          <tertiary sortas="Jenkins">pour la base de données utilisateurs
          interne de Jenkins</tertiary>
        </indexterm>administrateur peut ensuite décider ce que ces
      utilisateurs sont autorisés à faire.</para>

      <para>Jenkins ajoute automatiquement tout utilisateur de gestionnaire de
      sources à cette base de données dès qu'un changement est committé dans
      le code source surveillé par Jenkins. Ces noms d'utilisateurs sont
      utilisés principalement pour enregistrer le responsable de chaque tâche
      de build. Vous pouvez voir la liste des utilisateurs actuellement connus
      en cliquant sur l'entrée de menu Personnes (voir <xref
      linkend="fig-hudson-user-list" />). Ici, vous pouvez visualiser les
      utilisateurs que Jenkins connaît actuellement, et aussi voir le dernier
      projet dans lequel ils ont committé. Notez que cette liste contient la
      liste de tous les utilisateurs à avoir jamais committé dans les projets
      que Jenkins surveille — ils pourraient ne pas être (et en général ne
      sont pas) tous des utilisateurs actifs de Jenkins capables de se connecter
      sur le serveur Jenkins.</para>

      <figure float="none" id="fig-hudson-user-list">
        <title>La liste des utilisateurs connus de Jenkins</title>

        <mediaobject id="I_mediaobject7_d1e10215">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0703.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0703.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Si vous cliquez sur un utilisateur de cette liste, Jenkins vous
      emmène sur une page affichant différentes informations à propos de cet
      utilisateur, incluant son nom complet et les tâches de build auxquelles
      il a contribué (voir <xref linkend="fig-hudson-user-builds" />). De là,
      vous pouvez aussi modifier ou compléter les détails à propos de cet
      utilisateur, comme son mot de passe ou son adresse email.</para>

      <figure float="none" id="fig-hudson-user-builds">
        <title>Afficher les builds auxquels un utilisateur participe</title>

        <mediaobject id="I_mediaobject7_d1e10227">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0704.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0704.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Un utilisateur apparaissant sur cette liste ne peut pas
      nécessairement se connecter à Jenkins. Pour pouvoir se connecter,
      l'utilisateur doit avoir un mot de passe configuré. Il y a
      essentiellement deux façons de faire cela. Si <indexterm
          id="I_indexterm7_d1e10234" significance="normal">
          <primary>sécurité</primary>

          <secondary>domaines de sécurité</secondary>

          <tertiary>activer l'enregistrement utilisateur</tertiary>
        </indexterm>vous avez configuré l'option "Autoriser les utilisateurs à
      s'enregistrer", les utilisateurs peuvent simplement se connecter avec
      leur nom d'utilisateur SCM et fournir leur adresse email et leur mot de
      passe (voir <xref linkend="hudson-security-simple" />). Autrement, vous
      pouvez activer un utilisateur en cliquant sur l'option de menu
      Configurer dans l'écran de détails utilisateur, et fournir une adresse
      email et un mot de passe vous-même (voir <xref
      linkend="fig-hudson-edit-user" />).</para>

      <figure float="none" id="fig-hudson-edit-user">
        <title>Créer un nouveau compte utilisateur en s'enregistrant</title>

        <mediaobject id="I_mediaobject7_d1e10249">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0705.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0705.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Il est <indexterm id="I_indexterm7_d1e10256" significance="normal">
          <primary>notifications</primary>

          <secondary>email</secondary>
        </indexterm><indexterm id="I_indexterm7_d1e10261"
          significance="normal">
          <primary>notifications email</primary>
        </indexterm>utile de noter que, si vos adresses email sont
      synchronisées avec vos noms d'utilisateurs de contrôle de version (par
      exemple, si vous travaillez chez acme.com, et que l'utilisateur “joe”
      dans votre système de contrôle de version a une adresse email
      <emphasis>joe@acme.com</emphasis>), vous pouvez faire que Jenkins dérive
      l'adresse email de l'utilisateur en ajoutant un suffixe que vous
      configurez dans la section Notification Email (voir <xref
      linkend="fig-security-email-config" />). Si vous avez effectué ce type
      de configuration, vous n'avez pas besoin de spécifier l'adresse email
      pour les nouveaux utilisateurs à moins qu'elle ne respecte pas cette
      convention.</para>

      <figure float="none" id="fig-security-email-config">
        <title>Synchroniser les adresses email</title>

        <mediaobject id="I_mediaobject7_d1e10273">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0706.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0706.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Une autre façon de gérer les utilisateurs courants actifs (ceux
      qui peuvent vraiment se connecter à Jenkins) s'effectue via le lien
      Gérer les utilisateurs dans la page de configuration principale de
      Jenkins (voir <xref linkend="fig-hudson-manage-users" />).</para>

      <figure float="none" id="fig-hudson-manage-users">
        <title>Vous pouvez aussi gérer les utilisateurs Jenkins depuis la page
        de configuration Jenkins</title>

        <mediaobject id="I_mediaobject7_d1e10286">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0707.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0707.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>D'ici, vous pouvez voir et éditer les utilisateurs qui peuvent se
      connecter à Jenkins (voir <xref linkend="fig-hudson-user-database" />).
      Cela inclut à la fois les utilisateurs qui se sont enregistrés
      manuellement (si cette option a été activée) et les utilisateurs SCM que
      vous avez activés en leur configurant un mot de passe. Vous pouvez aussi
      éditer des informations utilisateur (par exemple, modifier leur adresse
      email or réinitialiser leur mot de passe), ou même les supprimer de la
      liste des utilisateurs actifs. Procéder ainsi ne les enlèvera pas de la
      liste globale des utilisateurs (leurs noms apparaîtront toujours dans
      l'historique de build, par exemple), mais ils ne seront plus capables de
      se connecter au serveur Jenkins.</para>

      <figure float="none" id="fig-hudson-user-database">
        <title>La base de données des utilisateurs de Jenkins</title>

        <mediaobject id="I_mediaobject7_d1e10298">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0708.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0708.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>La base de données interne de Jenkins est suffisante pour de
      nombreuses équipes et organisations. Toutefois, pour des organisations
      plus importantes, cela peut devenir fastidieux et répétitif de gérer un
      grand nombre d'utilisateurs à la main. Et plus particulièrement encore
      si cette information existe déjà quelque part. Dans les sections
      suivantes, nous regarderons comment brancher Jenkins avec d'autres
      systèmes de gestion utilisateurs, comme des annuaires LDAP ou des
      utilisateurs et groupes <indexterm class="endofrange"
          id="I_indexterm7_d1e10305" significance="normal"
          startref="ch07-internal">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10307"
          significance="normal" startref="ch07-internal2">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10309"
          significance="normal" startref="ch07-internal3">
          <primary></primary>
        </indexterm>Unix.</para>
    </sect2>

    <sect2 id="sec-security-ldap">
      <title>Utiliser un annuaire LDAP</title>

      <para>Plusieurs <indexterm class="startofrange" id="ch07-ldap1"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>domaines de sécurité</secondary>

          <tertiary>annuaire LDAP</tertiary>
        </indexterm><indexterm class="startofrange" id="ch07-ldap2"
          significance="normal">
          <primary>annuaire LDAP, comme domaine de sécurité</primary>
        </indexterm>organisations utilisent des annuaires LDAP pour stocker
      des comptes et mots de passe à travers différentes applications. Jenkins
      s'intègre bien avec LDAP, sans nécessiter de plugin spécial. Il peut
      authentifier les utilisateurs en utilisant l'annuaire LDAP, vérifier
      l'appartenance à un groupe, et récupérer les adresses email des
      utilisateurs authentifiés.</para>

      <para>Pour intégrer Jenkins à votre annuaire LDAP, sélectionnez
      simplement “LDAP” dans la section Domaine de sécurité, et remplissez les
      détails concernant votre serveur LDAP (voir <xref
      linkend="fig-hudson-security-ldap" />). Le champ le plus important est
      le serveur de l'annuaire. Si vous utilisez un port non standard, vous
      devrez aussi l'indiquer (par exemple, <filename
      moreinfo="none">ldap.acme.org:1389</filename>). Si vous utilisez LDAPS,
      vous devrez aussi le spécifier (par exemple, <filename
      moreinfo="none">ldaps://ldap.acme.org</filename>)</para>

      <para>Si votre serveur autorise la <emphasis>connexion</emphasis> anonyme,
      cela vous suffira probablement pour démarrer. Sinon, vous pouvez
      utiliser les options avancées pour paramétrer plus finement votre
      configuration.</para>

      <para>La plupart des champs Avancés peuvent sans problème être laissés
      vides à moins que vous n'ayez une bonne raison de les changer. Si votre
      annuaire est extrêmement volumineux, vous devriez spécifiez une valeur
      de DN racine (e.g., <literal moreinfo="none">dc=acme, dc=com</literal>)
      et/ou une base de recherche utilisateur et groupe (e.g., <literal
      moreinfo="none">ou=people</literal>) pour réduire la portée des requêtes
      utilisateur. Ceci n'est habituellement pas nécessaire à moins que vous
      ne remarquiez des problèmes de performance. Ou, si votre serveur
      n'autorise pas les connexions anonymes, vous devrez fournir un DN et un mot
      de passe de gestionnaire, afin que Jenkins puisse se connecter au
      serveur pour exécuter ses requêtes.</para>

      <figure float="none" id="fig-hudson-security-ldap">
        <title>Configurer LDAP dans Jenkins</title>

        <mediaobject id="I_mediaobject7_d1e10351">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0709.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0709.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Une fois que vous avez configuré votre serveur LDAP comme domaine
      de sécurité, vous pouvez configurer votre modèle de sécurité comme
      décrit précédemment. Quand les utilisateurs se connecteront à Jenkins,
      ils seront authentifiés sur l'annuaire LDAP.</para>

      <para>Vous <indexterm id="I_indexterm7_d1e10360" significance="normal">
          <primary>groupes</primary>

          <secondary>LDAP</secondary>
        </indexterm>pouvez aussi utiliser des groupes LDAP, bien que la
      configuration ne soit pas immédiatement évidente. Supposons que vous
      ayez défini un group appelé JenkinsAdmin dans votre annuaire LDAP, avec
      un DN <code>cn=JenkinsAdmin, ou-Groups, dc=acme, dc=com</code>. Pour
      référencer ce groupe dans Jenkins, vous devez prendre le nom commun (cn)
      en majuscules, et le préfixer avec <literal
      moreinfo="none">ROLE_</literal>. Ainsi <code>cn=JenkinsAdmin</code>
      devient <code>ROLE_JENKINSADMIN</code>. Vous pouvez voir un exemple de
      groupes LDAP<indexterm class="endofrange" id="I_indexterm7_d1e10379"
          significance="normal" startref="ch07-ldap1">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10381"
          significance="normal" startref="ch07-ldap2">
          <primary></primary>
        </indexterm> utilisés de cette façon dans <xref
      linkend="fig-hudson-security-ldap-groups" />.</para>

      <figure float="none" id="fig-hudson-security-ldap-groups">
        <title>Utiliser des groupes LDAP dans Jenkins</title>

        <mediaobject id="I_mediaobject7_d1e10389">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0710.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0710.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>
    </sect2>

    <sect2>
      <title>Utiliser Microsoft Active Directory</title>

      <para>Microsoft Active Directory<indexterm class="startofrange"
          id="ch07-ad1" significance="normal">
          <primary>Microsoft Active Directory, comme domaine de
          sécurité</primary>
        </indexterm><indexterm class="startofrange" id="ch07-ad2"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>domaines de sécurité</secondary>

          <tertiary>Microsoft Active Directory</tertiary>
        </indexterm><indexterm class="startofrange" id="ch07-atlas3"
          significance="normal">
          <primary>Active Directory, Microsoft, comme domaine de
          sécurité</primary>
        </indexterm> est un logiciel d'annuaire largement utilisé dans les
      architectures Microsoft. Bien qu'Active Directory fournisse un service
      LDAP, il peut être compliqué à configurer, et il est plus simple de
      demander à Jenkins de parler directement au serveur Active Directory.
      Heureusement, il y a un plugin pour ça.</para>

      <para>Le plugin Active Directory de Jenkins vous permet <indexterm
          id="I_indexterm7_d1e10415" significance="normal">
          <primary>plugins</primary>

          <secondary>Active Directory</secondary>
        </indexterm> de configurer Jenkins pour authentifier les utilisateurs
      via un serveur Microsoft Active Directory. Vous pouvez à la fois
      authentifier les utilisateurs, et récupérer leurs groupes pour la
      matrice d'autorisations générale ou par projet. Notez que, à l'inverse
      d'une intégration LDAP conventionnelle (voir <xref
      linkend="sec-security-ldap" />), il n'est pas nécessaire de préfixer les
      groupes avec <literal moreinfo="none">ROLE_</literal>— vous pouvez
      utiliser l'annuaire des groupes Active Directory <indexterm
          id="I_indexterm7_d1e10426" significance="normal">
          <primary>groups</primary>

          <secondary>Active Directory</secondary>
        </indexterm>(comme “Administrateur de Domaine”).</para>

      <para>Pour configurer le plugin, vous devez fournir le nom de domaine
      complet de votre serveur Active Directory. Si vous avez plus d'un
      domaine, vous pouvez fournir une liste séparée par des virgule. Si vous
      fournissez le nom de la forêt (say “acme.com” au lieu de
      “europe.acme.com”), alors la recherche sera faite à partir du catalogue
      global. Notez que si vous faites cela sans spécifier le <emphasis>bind
      DN</emphasis> (voir ci-dessous), l'utilisateur devra se connecter en
      tant que “europe\joe” ou “joe@europe”.</para>

      <para>Les options avancées vous permettent de spécifier un nom de site
      (pour améliorer les performances en restreignant les contrôleurs de
      domaine que Jenkins requête), et un DN de liaison et un mot de passe, ce
      qui peut être pratique si vous vous connectez à une forêt multidomaines.
      Vous devez fournir des valeurs de DN de liaison et de mot de passe
      valides, que Jenkins puisse utiliser pour se connecter à votre serveur
      afin qu'il établisse l'identité complète de l'utilisateur en cours
      d'authentification. De cette façon, l'utilisateur peut taper simplement
      “jack” ou “jill”, et faire que le système retrouve automatiquement
      qu'ils sont <emphasis>jack@europe.acme.com</emphasis> ou
      <emphasis>jack@asia.acme.com</emphasis>. Vous devez fournir le nom
      principal complet avec le nom de domaine, tel que
      <emphasis>admin@europe.acme.com</emphasis>, ou un nom distinctif de
      style LDAP, tel que <literal
      moreinfo="none">CN=Administrator,OU=europe,DC=acme,DC=com</literal>.</para>

      <para>Une autre bonne chose à propos de ce plugin est qu'il fonctionne à
      la fois dans un environnement Windows et un environnement Unix. Donc si
      Jenkins fonctionne sur un serveur Unix, il pourra quand même effectuer
      les authentifications via un service Microsoft Active Directory d'une
      autre machine.</para>

      <para>Plus précisément, si Jenkins s'exécute sur une machine Windows et
      que vous ne spécifiez pas de domaine, cette machine doit être un membre
      du domaine auprès duquel vous souhaitez vous authentifier. Jenkins
      utilisera ADSI pour retrouver tous les détails, aucune configuration
      additionnelle n'est donc nécessaire.</para>

      <para>Sur une machine non Windows (ou si vous spécifiez un ou plusieurs
      domaines), vous devez dire à Jenkins le nom du domaine Active Directory
      auprès duquel s'authentifier. Jenkins utilise alors les enregistrements
      DNS SRV et le service LDAP d'Active Directory pour authentifier les
      utilisateurs.</para>

      <para>Jenkins peut déterminer les <indexterm id="I_indexterm7_d1e10462"
          significance="normal">
          <primary>groupes</primary>

          <secondary>Active Directory</secondary>
        </indexterm>groupes Active Directory auxquels l'utilisateur
      appartient. Vous pouvez donc les utiliser dans votre stratégie
      d'autorisations. Par exemple, vous pouvez utiliser ces groupes dans la
      sécurité basée sur une matrice, ou autoriser les "Administrateurs de
      domaine" à administrer <indexterm class="endofrange"
          id="I_indexterm7_d1e10468" significance="normal" startref="ch07-ad1">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10470"
          significance="normal" startref="ch07-ad2">
          <primary></primary>
        </indexterm>Jenkins.</para>
    </sect2>

    <sect2>
      <title>Utiliser les utilisateurs et les groupes Unix</title>

      <para>Si <indexterm id="I_indexterm7_d1e10478" significance="normal">
          <primary>Unix</primary>

          <secondary>utilisateurs et groupes, en tant que domaine de
          sécurité</secondary>
        </indexterm><indexterm id="I_indexterm7_d1e10483"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>domaines de sécurité</secondary>

          <tertiary>Utilisateurs et groupes Unix</tertiary>
        </indexterm><indexterm id="I_indexterm7_d1e10490"
          significance="normal">
          <primary>groupes</primary>

          <secondary>Unix</secondary>
        </indexterm>vous exécutez Jenkins sur une machine Unix, vous pouvez
      aussi demander à Jenkins d'utiliser les comptes utilisateur et groupes
      définis sur cette machine. Dans ce cas, les utilisateurs se connecteront
      à Jenkins en utilisant leurs comptes et mots de passe Unix. On utilise
      alors le système Pluggable Authentication Modules (PAM), et cela
      fonctionne aussi bien avec NIS.</para>

      <para>Dans sa forme la plus basique, c'est un peu rébarbatif, parce que
      cela nécessite de créer et de configurer des comptes utilisateurs pour
      chaque nouvel utilisateur Jenkins. Ce n'est véritablement utile que si
      ces comptes nécessitent d'être mis en place pour d'autres
      besoins.</para>
    </sect2>

    <sect2>
      <title>Déléguer au conteneur de Servlet</title>

      <para>Une autre <indexterm id="I_indexterm7_d1e10503"
          significance="normal">
          <primary>Conteneur de servlet</primary>

          <secondary>en tant que domaine de sécurité</secondary>
        </indexterm><indexterm id="I_indexterm7_d1e10508"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>domaines de sécurité</secondary>

          <tertiary>Conteneur de servlet</tertiary>
        </indexterm>façon d'identifier les utilisateurs Jenkins est de laisser
      le conteneur de servlet le faire pour vous. Cette approche est utile si
      vous exécutez Jenkins dans un conteneur de servlet comme <indexterm
          id="I_indexterm7_d1e10516" significance="normal">
          <primary>Conteneur de servlet Tomcat</primary>
        </indexterm>Tomcat ou <indexterm id="I_indexterm7_d1e10520"
          significance="normal">
          <primary>Conteneur de servlet GlassFish</primary>
        </indexterm>GlassFish, et que vous avez déjà un moyen établi pour
      intégrer le conteneur de servlet avec votre annuaire utilisateur.
      Tomcat, par exemple, vous permet d'authentifier les utilisateurs par
      rapport à une base de données relationnelle (en utilisant du JDBC direct
      ou une DataSource), JNDI, JAAS, ou fichier de configuration XML. Vous
      pouvez aussi utiliser les rôles définis dans l'annuaire utilisateur du
      conteneur de servlet afin de les utiliser pour les stratégies
      d'autorisation par matrice ou basée sur le projet.</para>

      <para>Dans Jenkins, c'est facile à configurer — sélectionnez simplement
      cette option dans la section Domaine de sécurité (voir <xref
      linkend="fig-hudson-security-container" />). Une fois que vous avez fait
      cela, Jenkins laissera le serveur s'occuper de tout.</para>

      <figure float="none" id="fig-hudson-security-container">
        <title>Sélectionner le domaine de sécurité</title>

        <mediaobject id="I_mediaobject7_d1e10534">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0711.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0711.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>
    </sect2>

    <sect2>
      <title>Utiliser Atlassian Crowd</title>

      <para>Si <indexterm class="startofrange" id="ch07-atlas1"
          significance="normal">
          <primary>Atlassian Crowd, en tant que domaine de sécurité</primary>
        </indexterm><indexterm class="startofrange" id="ch07-atlas2"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>domaine de sécurité</secondary>

          <tertiary>Atlassian Crowd</tertiary>
        </indexterm><indexterm id="I_indexterm7_d1e10554"
          significance="normal">
          <primary>Crowd, Atlassian, en tant que domaine de sécurité</primary>
        </indexterm>votre organisation utilise les produits Atlassian comme
      JIRA et Confluence, vous pouvez aussi utiliser Crowd. Crowd est une
      application commerciale de gestion d'identité et de
      <emphasis>Single-Sign On</emphasis> (SSO) d'Atlassian qui vous permet de
      gérer des comptes utilisateur unique à travers différents produits. Vous
      gérez une base de données interne d'utilisateurs, de groupes et de
      rôles, et vous vous intégrez avec des annuaires externes comme des
      annuaires LDAP ou des magasins utilisateur spécifiques.</para>

      <para>En utilisant le plugin Jenkins Crowd, vous <indexterm
          id="I_indexterm7_d1e10560" significance="normal">
          <primary>plugins</primary>

          <secondary>Crowd, pour Atlassian Crowd</secondary>
        </indexterm> pouvez utiliser Atlassian Crowd comme source de vos
      utilisateurs et groupes Jenkins. Avant de commencer, vous devez
      configurer une nouvelle application dans Crowd (voir <xref
      linkend="fig-hudson-security-cloud-app" />). Configurez simplement une
      nouvelle Application Générique appelée “jenkins” (ou quelque chose du
      même genre), et avancez d'onglet en onglet. Dans l'onglet Connexions,
      vous devez fournir l'adresse IP de votre serveur Jenkins. Ensuite, vous
      devez indiquer l'annuaire Crowd que vous utiliserez pour récupérer les
      comptes utilisateurs Jenkins et informations de groupes. Enfin, vous
      devrez dire à Crowd quels utilisateurs de ces annuaires peuvent se
      connecter à Jenkins. Une option est d'autoriser tous les utilisateurs à
      s'authentifier, et laisser Jenkins gérer les détails. Sinon, vous pouvez
      lister les groupes utilisateur Crowd autorisés à se connecter à
      Jenkins.</para>

      <figure float="0" id="fig-hudson-security-cloud-app">
        <title>Utiliser Atlassian Crowd comme domaine de sécurité
        Jenkins</title>

        <mediaobject id="I_mediaobject7_d1e10571">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0712.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0712.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Une fois que vous avez configuré cela, vous devez installer le
      plugin Jenkins Crowd, comme vous le faites habituellement via le
      gestionnaire de plugin de Jenkins. Une fois installé le plugin et
      Jenkins redemarré, vous pouvez définir Crowd comme domaine de sécurité
      dans l'écran de configuration principal de Jenkins (voir <xref
      linkend="fig-hudson-security-crowd" />).</para>

      <figure float="0" id="fig-hudson-security-crowd">
        <title>Utiliser Atlassian Crowd comme domaine de sécurité
        Jenkins</title>

        <mediaobject id="I_mediaobject7_d1e10583">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0713.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0713.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Avec ce plugin installé et configuré, vous pouvez utiliser les
      utilisateurs et les <indexterm id="I_indexterm7_d1e10590"
          significance="normal">
          <primary>groupes</primary>

          <secondary>Atlassian Crowd</secondary>
        </indexterm>groupes de Crowd pour toutes les stratégie d'autorisation
      que nous avons présentée précédemment dans ce chapitre. Par exemple,
      dans <xref linkend="fig-hudson-security-crowd-groups-matrix" />, nous
      utilisons des groupes utilisateurs définis dans Crowd pour configurer
      une sécurité basée sur la matrice dans l'écran principal de <indexterm
          class="endofrange" id="I_indexterm7_d1e10598" significance="normal"
          startref="ch07-atlas2">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10600"
          significance="normal" startref="ch07-atlas1">
          <primary></primary>
        </indexterm>configuration.</para>

      <figure float="0" id="fig-hudson-security-crowd-groups-matrix">
        <title>Utiliser les groupes Atlassian Crowd groups dans
        Jenkins</title>

        <mediaobject id="I_mediaobject7_d1e10606">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0714.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0714.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>
    </sect2>

    <sect2>
      <title>S'intégrer avec d'autres systèmes</title>

      <para>En <indexterm id="I_indexterm7_d1e10616" significance="normal">
          <primary>sécurité</primary>

          <secondary>domaines de sécurité</secondary>

          <tertiary>CAS</tertiary>
        </indexterm><indexterm id="I_indexterm7_d1e10623"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>domaines de sécurité</secondary>

          <tertiary>SFEE</tertiary>
        </indexterm><indexterm id="I_indexterm7_d1e10630"
          significance="normal">
          <primary>CAS (Central Authentication Service)</primary>
        </indexterm><indexterm id="I_indexterm7_d1e10633"
          significance="normal">
          <primary>SFEE (Source Forge Enterprise Edition)</primary>
        </indexterm><indexterm id="I_indexterm7_d1e10636"
          significance="normal">
          <primary>plugins</primary>

          <secondary>CAS</secondary>
        </indexterm><indexterm id="I_indexterm7_d1e10641"
          significance="normal">
          <primary>plugins</primary>

          <secondary>SFEE</secondary>
        </indexterm><indexterm id="I_indexterm7_d1e10646"
          significance="normal">
          <primary>Source Forge Enterprise Edition</primary>

          <see>SFEE</see>
        </indexterm>plus des stratégies d'authentification discutées ici, il y
      a un certain nombre d'autres plugins permettant à Jenkins d'effectuer
      l'authentification via d'autres systèmes. Au moment de l'écriture de ces
      lignes, ceci inclut <emphasis>Central Authentication Service</emphasis>
      (CAS) — un outil open source de single sign-on — et le serveur Collabnet
      <emphasis>Source Forge Enterprise Edition</emphasis> (SFEE).</para>

      <para>Si <indexterm class="startofrange" id="ch07-cust"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>domaines de sécurité</secondary>

          <tertiary>personnaliser</tertiary>
        </indexterm><indexterm class="startofrange" id="ch07-cust2"
          significance="normal">
          <primary>plugins</primary>

          <secondary>Script de domaines de sécurité</secondary>
        </indexterm><indexterm class="startofrange" id="ch07-cust3"
          significance="normal">
          <primary>Plugin de script de domaines de sécurité</primary>
        </indexterm><indexterm class="startofrange" id="ch07-cust4"
          significance="normal">
          <primary>scripts</primary>

          <secondary>scripts d'authentification personnalisés</secondary>
        </indexterm>aucun plugin n'est disponible, vous pouvez aussi écrire
      votre propre script d'authentification. Pour faire cela, vous devez
      installer le plugin de domaine de sécurité. Une fois que vous avez
      installé le script et redémarré Jenkins, vous pouvez écrire deux scripts
      dans votre langage de scripting favori. Un script authentifie
      l'utilisateur, tandis que l'autre détermine les groupes d'un utilisateur
      donné (voir <xref linkend="fig-hudson-security-scripts" />).</para>

      <figure float="0" id="fig-hudson-security-scripts">
        <title>Utiliser des scripts personnalisés pour gérer
        l'authentification</title>

        <mediaobject id="I_mediaobject7_d1e10680">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0715.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0715.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Avant d'invoquer le script d'authentification, Jenkins positionne
      deux <indexterm id="I_indexterm7_d1e10687" significance="normal">
          <primary>variable d'environnement U</primary>
        </indexterm><indexterm id="I_indexterm7_d1e10690"
          significance="normal">
          <primary>variable d'environnement P</primary>
        </indexterm><phrase>variables d'environnement</phrase> : <literal
      moreinfo="none">U</literal>, contenant le nom d'utilisateur, et <literal
      moreinfo="none">P</literal>, contenant le mot de passe. Ce script
      utilise ces variables d'environnement pour authentifier le nom
      d'utilisateur et le mot de passe spécifié, en retournant 0 en cas de
      réussite, et une autre valeur sinon. Si l'authentification échoue, la
      sortie du processus sera renvoyée dans le message d'erreur affiché à
      l'utilisateur. Voici un simple script <indexterm class="startofrange"
          id="ch07-authgroovy" significance="normal">
          <primary>Groovy scripts</primary>

          <secondary>script d'authentification</secondary>
        </indexterm>script d'authentification Groovy :</para>

      <programlisting format="linespecific" id="I_programlisting7_d1e10712">def env = System.getenv()
def username = env['U']
def password = env['P']

println "Authenticating user $username"

if (authenticate(username, password)) {
    System.exit 0
} else {
    System.exit 1
}

def authenticate(def username, def password) {
    def userIsAuthenticated = true
    // Authentication logic goes here
    return userIsAuthenticated
}</programlisting>

      <para>Ce script est suffisant si tout ce que vous avez à faire est de
      gérer une authentification basique sans groupes. Si vous voulez utiliser
      des groupes de votre source d'authentification personnalisée dans vos
      autorisations matricielles ou projet (voir <xref
      linkend="sect-authorization" />), vous pouvez écrire un second script,
      qui détermine les groupes pour un utilisateur donné. Ce script utilise
      la variable d'environnement U pour déterminer quel utilisateur essaie de
      se connecter, et affiche une liste de groupe séparée par des virgules
      pour cet utilisateur sur la sortie standard. Si vous n'aimez pas les
      virgules, vous pouvez redéfinir le caractère de séparation dans la
      configuration. Voici un simple script Groovy pour faire cela :</para>

      <programlisting format="linespecific" id="I_programlisting7_d1e10721">def env = System.getenv()
def username = env['U'] 

println findGroupsFor(username)

System.exit 0

def findGroupsFor(def username) {
    return "admin,game-of-life-developer"
}</programlisting>

      <para>Ces deux scripts doivent renvoyer 0 lorsqu'ils sont appelés pour
      qu'un utilisateur soit<indexterm class="endofrange"
          id="I_indexterm7_d1e10727" significance="normal"
          startref="ch07-cust3">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10729"
          significance="normal" startref="ch07-cust3">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10731"
          significance="normal" startref="ch07-cust">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e10733"
          significance="normal" startref="ch07-authgroovy">
          <primary></primary>
        </indexterm> authentifié.</para>
    </sect2>
  </sect1>

  <sect1 id="sect-authorization">
    <title>Autorisation — Qui Peut Faire Quoi</title>

    <para>Une fois que vous avez défini comment identifier vos utilisateurs,
    vous devez décider ce qu'ils sont autorisés à faire. Jenkins supporte
    différentes stratégies dans ce domaine, allant d'une simple approche où un
    utilisateur connecté peut faire n'importe quoi à des stratégies impliquant
    des rôles plus précis et des authentifications par projet.</para>

    <sect2 id="sec-matrix-security">
      <title>Sécurité basée sur une matrice</title>

      <para>Laisser<indexterm class="startofrange" id="ch07-matrix1"
          significance="normal">
          <primary>sécurité basée sur une matrice</primary>
        </indexterm><indexterm class="startofrange" id="ch07-matrix2"
          significance="normal">
          <primary>autorisation</primary>

          <secondary>sécurité basée sur une matrice</secondary>
        </indexterm><indexterm class="startofrange" id="ch07-matrix3"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>autorisation</secondary>

          <tertiary>sécurité basée sur une matrice</tertiary>
        </indexterm><indexterm id="I_indexterm7_d1e10761"
          significance="normal">
          <primary>permissions</primary>

          <see>autorisation</see>
        </indexterm> les utilisateurs connectés faire n'importe quoi est
      certainement flexible, et pourrait suffire pour une petite équipe. Pour
      des équipes plus importantes ou multiples, ou des cas où Jenkins est
      utilisé en dehors d'un environnement de développement, une approche plus
      sophistiquée est généralement requise.</para>

      <para>La sécurité basée sur matrice est une approche plus élaborée, où
      différents utilisateurs se voient attribués différents droits, en
      utilisant une approche basée sur les rôles.</para>

      <sect3>
        <title>Mettre en place la sécurité basée sur une matrice</title>

        <para>La<indexterm id="I_indexterm7_d1e10774" significance="normal">
            <primary>administrateur</primary>

            <secondary sortas="matrix">pour la sécurité basée sur une
            matrice</secondary>
          </indexterm><indexterm id="I_indexterm7_d1e10779"
            significance="normal">
            <primary>utilisateurs</primary>

            <secondary>administrateur</secondary>

            <tertiary sortas="matrix">pour la sécurité basée sur une
            matrice</tertiary>
          </indexterm> première étape dans la configuration de la sécurité
        basée sur une matrice dans Jenkins est de créer un administrateur.
        <emphasis>C'est une étape essentielle, et elle doit être effectuée
        avant toutes les autres. </emphasis>Votre administrateur peut être un
        utilisateur existant, ou un créé spécialement dans ce but. Si vous
        voulez créer un utilisateur administrateur dédié, créez le simplement
        en vous enregistrant de la façon habituelle (voir <xref
        linkend="fig-hudson-user-signup" />). Il n'est pas nécessaire qu'il
        soit associé à un utilisateur SCM.</para>

        <para>Une fois que votre utilisateur administrateur est prêt, vous pouvez
        activer la sécurité basée sur une matrice en sélectionnant “Sécurité
        basée sur une matrice” dans la section Autorisations de la page de
        configuration principale. Jenkins affichera un tableau contenant les
        utilisateurs autorisés, et des cases à cocher correspondant aux
        différentes permissions que vous pouvez affecter à ces utilisateurs
        (voir <xref linkend="fig-hudson-matrix-anonymous" />).</para>

        <figure float="none" id="fig-hudson-matrix-anonymous">
          <title>Sécurité basée sur une matrice</title>

          <mediaobject id="I_mediaobject7_d1e10799">
            <imageobject role="print">
              <imagedata fileref="figs/print/jtdg_0716.pdf" format="PDF" />
            </imageobject>

            <imageobject role="web">
              <imagedata fileref="figs/web/jtdg_0716.png" format="PNG" />
            </imageobject>
          </mediaobject>
        </figure>

        <para>L'utilisateur spécial “anonyme” est toujours présent dans le
        tableau. Cet utilisateur représente les utilisateurs non authentifiés.
        Typiquement, vous ne donnez que des droits limités aux utilisateurs
        non authentifiés, comme des accès en lecture seule, ou pas d'accès du
        tout (comme montré dans <xref
        linkend="fig-hudson-matrix-anonymous" />).</para>

        <para>La première chose que vous devez savoir faire maintenant est de
        donner les droits d'administration à votre administrateur. Ajoutez cet
        utilisateur d'administration dans le champ “Utilisateur/groupe à
        ajouter” et cliquez sur Ajouter. Votre administrateur apparaîtra alors
        dans la matrice de permissions. Maintenant assurez-vous d'accorder
        toutes les permissions à cet utilisateur (voir <xref
        linkend="fig-hudson-matrix-admin" />), et sauvez votre configuration.
        Vous devriez à présent être capable de vous connecter avec votre
        compte utilisateur administrateur (si vous n'êtes pas déjà connecté
        avec ce compte) et continuer à configurer vos autres
        utilisateurs.</para>

        <figure float="none" id="fig-hudson-matrix-admin">
          <title>Configurer un administrateur</title>

          <mediaobject id="I_mediaobject7_d1e10815">
            <imageobject role="print">
              <imagedata fileref="figs/print/jtdg_0717.pdf" format="PDF" />
            </imageobject>

            <imageobject role="web">
              <imagedata fileref="figs/web/jtdg_0717.png" format="PNG" />
            </imageobject>
          </mediaobject>
        </figure>
      </sect3>

      <sect3>
        <title>Configurer plus finement les permissions utilisateurs</title>

        <para>Une fois que vous avez configuré votre compte administrateur,
        vous pouvez ajouter d'autres utilisateurs ayant besoin d'accéder à
        votre instance Jenkins. Ajoutez simplement les noms d'utilisateur et
        cochez les permissions que vous voulez leur accorder (voir <xref
        linkend="fig-hudson-matrix-users" />). Si vous utilisez un serveur
        LDAP ou des utilisateurs ou groupes Unix comme schéma
        d'authentification sous-jacent (voir <xref
        linkend="sec-security-ldap" />), vous pouvez aussi configurer les
        permissions pour des groupes d'utilisateurs.</para>

        <figure float="none" id="fig-hudson-matrix-users">
          <title>Configurer les autres utilisateurs</title>

          <mediaobject id="I_mediaobject7_d1e10832">
            <imageobject role="print">
              <imagedata fileref="figs/print/jtdg_0718.pdf" format="PDF" />
            </imageobject>

            <imageobject role="web">
              <imagedata fileref="figs/web/jtdg_0718.png" format="PNG" />
            </imageobject>
          </mediaobject>
        </figure>

        <para>Vous pouvez accorder différentes permissions, qui sont
        organisées en plusieurs groupes : Global, Esclave, Job, Lancer, Voir
        et Gestion de version. La plupart des permissions sont assez
        évidentes, mais certaines nécessitent un peu plus d'explication. Les
        permissions individuelles sont comme suit :</para>

        <variablelist>
          <varlistentry>
            <term><emphasis>Global</emphasis></term>

            <listitem>
              <para>Ce groupe couvre des permissions basiques sur l'ensemble
              du système :</para>

              <variablelist>
                <varlistentry>
                  <term>Administrer</term>

                  <listitem>
                    <para>Permet à un utilisateur de faire des modifications
                    de configuration à l'ensemble du système ou autres
                    opérations sensibles, par exemple dans les pages de
                    configuration principales de Jenkins. Ceci devrait être
                    réservé à l'administrateur Jenkins.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Lire</term>

                  <listitem>
                    <para>Cette permission fournit un accès en lecture seule à
                    pratiquement toutes les pages de Jenkins. Si vous voulez
                    que les utilisateurs anonymes puissent voir les jobs
                    librement, mais qu'ils ne puissent pas les modifier ou les
                    démarrer, donnez leur le droit Lire à l'utilisateur
                    spécial “anonyme”. Sinon, enlevez simplement cette
                    permission à l'utilisateur Anonyme. Et si vous voulez que
                    tous les utilisateurs authentifiés puissent voir les jobs
                    de construction, ajoutez alors un un utilisateur spécial
                    “authenticated”, et donnez lui la permission
                    Global/Lire.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis>Esclave</emphasis></term>

            <listitem>
              <para>Ce groupe couvre des permissions à propos de noeuds de
              constructions, ou esclaves :</para>

              <variablelist>
                <varlistentry>
                  <term>Configurer</term>

                  <listitem>
                    <para>Créer ou configurer de nouveaux noeuds de
                    construction.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Supprimer</term>

                  <listitem>
                    <para>Supprimer des noeuds de construction.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis>Job</emphasis></term>

            <listitem>
              <para>Ce group couvre des permissions liées aux tâches :</para>

              <variablelist>
                <varlistentry>
                  <term>Créer</term>

                  <listitem>
                    <para>Créer une nouvelle tâche de build.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Supprimer</term>

                  <listitem>
                    <para>Supprimer une tâche de build existante.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Configurer</term>

                  <listitem>
                    <para>Mettre à jour la configuration de tâches de build
                    existantes.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Lire</term>

                  <listitem>
                    <para>Voir des tâches de build.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Build</term>

                  <listitem>
                    <para>Démarrer une tâche de build.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Espace de travail</term>

                  <listitem>
                    <para>Voir et télécharger le contenu de l'espace de
                    travail pour une tâche de construction. Rappelez-vous,
                    l'espace de travail contient le code source et les
                    artefacts, donc si vous voulez protéger ces derniers d'un
                    accès général, vous devriez enlever cette
                    permission.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Release</term>

                  <listitem>
                    <para>Démarrer une release Maven pour un projet configuré
                    avec le plugin M2Release.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis>Lancer</emphasis></term>

            <listitem>
              <para>Ce <indexterm id="I_indexterm7_d1e10940"
                  significance="normal">
                  <primary>historique de build</primary>

                  <secondary>permissions pour</secondary>
                </indexterm>groupe couvre les droits relatifs à des builds
              spécifiques de l'historique des builds :</para>

              <variablelist>
                <varlistentry>
                  <term>Supprimer</term>

                  <listitem>
                    <para>Supprimer un build de l'historique de build.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Mettre à jour</term>

                  <listitem>
                    <para>Mettre à jour la description et d'autres propriétés
                    d'un build dans l'historique de build. Ceci peut être
                    utile si un utilisateur veut laisser une note sur la cause
                    des échecs de build, par exemple.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis>Voir</emphasis></term>

            <listitem>
              <para>Ce groupe couvre des vues de gestion :</para>

              <variablelist>
                <varlistentry>
                  <term>Créer</term>

                  <listitem>
                    <para>Créer une nouvelle vue.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Supprimer</term>

                  <listitem>
                    <para>Supprimer une vue existante.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Configurer</term>

                  <listitem>
                    <para>Configurer une vue existante.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Gestion de version</term>

            <listitem>
              <para>Permissions relatives à votre système de contrôle de
              version :</para>

              <variablelist>
                <varlistentry>
                  <term>Tag</term>

                  <listitem>
                    <para>Créer un nouveau tag dans le dépôt de code source
                    pour un build donné.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Autres</term>

            <listitem>
              <para>Il peut y avoir d'autres permissions disponibles, en
              fonction des plugins installés. Une permission utile est
              :</para>

              <variablelist>
                <varlistentry>
                  <term>Promouvoir</term>

                  <listitem>
                    <para>Si le plugin Promoted Builds est installé, cette
                    permission permet aux utilisateurs de promouvoir
                    manuellement un build.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>

      <sect3>
        <title>A l'aide ! Je me suis verrouillé tout seul !</title>

        <para>Il pourrait arriver que, pendant ce processus, vous vous
        bloquiez tout seul l'accès à Jenkins. Ceci peut arriver si, par
        exemple, vous sauvez la configuration matricielle sans avoir
        correctement configuré votre administrateur. Si cela arrive, ne
        paniquez pas — il y a une correction simple, du moment que vous avez
        accès au répertoire racine de Jenkins. Ouvrez simplement le fichier
        <filename moreinfo="none">config.xml</filename> à la racine du
        répertoire de Jenkins. Il contiendra quelque chose de ce genre
        :</para>

        <programlisting format="linespecific" id="I_programlisting7_d1e11019">&lt;hudson&gt;
    &lt;version&gt;1.391&lt;/version&gt;
    &lt;numExecutors&gt;2&lt;/numExecutors&gt;
    &lt;mode&gt;NORMAL&lt;/mode&gt;
    &lt;useSecurity&gt;true&lt;/useSecurity&gt;
    ...</programlisting>

        <para>La chose à rechercher est l'élement
        <code>&lt;useSecurity&gt;</code>. Pour restaurer votre accès à
        Jenkins, changez cette valeur à false, et redémarrez votre serveur.
        Vous pourrez alors à nouveau accéder à Jenkins, et mettre en place
        votre configuration de sécurité<indexterm class="endofrange"
            id="I_indexterm7_d1e11026" significance="normal"
            startref="ch07-matrix1">
            <primary></primary>
          </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11028"
            significance="normal" startref="ch07-matrix2">
            <primary></primary>
          </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11030"
            significance="normal" startref="ch07-matrix3">
            <primary></primary>
          </indexterm> correctement.</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Sécurité basée sur le projet</title>

      <para>La sécurité basée sur <indexterm class="startofrange"
          id="ch07-proj1" significance="normal">
          <primary>sécurité basée sur le projet</primary>
        </indexterm><indexterm class="startofrange" id="ch07-proj2"
          significance="normal">
          <primary>autorisation</primary>

          <secondary>sécurité basée sur le projet</secondary>
        </indexterm><indexterm class="startofrange" id="ch07-proj3"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>autorisation</secondary>

          <tertiary>sécurité basée sur le projet</tertiary>
        </indexterm>le projet vous permet d'utiliser le modèle de sécurité
      matricielle dont vous venons de discuter, et l'appliquer à des projets
      individuels. Non seulement vous pouvez assigner des rôles globaux à vos
      utilisateurs, mais vous pouvez aussi configurer des droits plus
      spécifiques à certains projets en particulier.</para>

      <para>Pour activer la sécurité de niveau projet, sélectionnez “Stratégie
      d'autorisation matricielle basée sur les projets” dans la section
      Autorisations de l'écran de configuration principal (voir <xref
      linkend="fig-hudson-project-based-security" />). Ici, vous pouvez
      configurer des droits par défaut pour les utilisateurs et les groupes,
      comme nous l'avons vu dans la sécurité basée sur une matrice (voir <xref
      linkend="sec-matrix-security" />).</para>

      <figure float="0" id="fig-hudson-project-based-security">
        <title>Sécurité basée sur le projet</title>

        <mediaobject id="I_mediaobject7_d1e11063">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0719.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0719.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <?dbfo-need height=”1in”?>

      <para>Ce sont les permissions par défaut à appliquer à tous les projets
      qui n'ont pas été spécifiquement configurés. Toutefois, quand vous
      utilisez la sécurité basée sur le projet, vous pouvez aussi positionner
      des permissions spécifiques au projet. Pour faire cela, sélectionnez
      “Activer la sécurité basée sur le projet” dans l'écran de configuration
      du projet (voir <xref linkend="fig-hudson-security-project-anon" />).
      Jenkins affichera un tableau de permissions spécifiques au projet. Vous
      pouvez configurer ces permissions pour différents utilisateurs et
      groupes comme dans la page de configuration globales. Ces permissions
      seront ajoutées aux permissions globales pour produire un ensemble de
      permissions spécifiquement applicables à ce projet.</para>

      <figure float="0" id="fig-hudson-security-project-anon">
        <title>Configurer la sécurité basée sur le projet</title>

        <mediaobject id="I_mediaobject7_d1e11076">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0720.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0720.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Comprendre comment cela fonctionne est plus facile avec quelques
      exemples pratiques. Dans <xref
      linkend="fig-hudson-project-based-security" />, par exemple, aucune
      permission n'a été donnée à l'utilisateur anonyme. Donc, par défaut,
      toutes les tâches de build resterong invisibles jusqu'à ce que
      l'utilisateur se connecte. Toutefois, nous utilisons une sécurité basée
      sur le projet, nous pouvons donc redéfinir cela projet par projet. Dans
      <xref linkend="fig-hudson-security-project-anon" />, par exemple, nous
      avons configuré le projet <emphasis>game-of-life</emphasis> pour qu'il
      offre l'accès en lecture seule à l'utilisateur spécial “anonyme”.</para>

      <para>Quand vous aurez sauvé cette configuration, les utilisateurs non
      authentifiés pourront voir le projet <emphasis>game-of-life</emphasis>
      en mode lecture seule (voir <xref
      linkend="fig-hudson-security-readonly-project" />). Le même principe
      s'applique avec toutes les permissions spécifiques au projet.</para>

      <figure float="0" id="fig-hudson-security-readonly-project">
        <title>Voir un projet</title>

        <mediaobject id="I_mediaobject7_d1e11100">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0721.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0721.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Notez que les permissions sont cumulatives — à l'écriture de ces
      lignes, il n'y a pas de moyen d'enlever une permission globale pour un
      projet particulier. Par exemple, si l'utilisateur anonyme a l'accès en
      lecture seule au niveau global, vous ne pouvez pas lui enlever pour un
      projet individuel. Donc quand vous utilisez la sécurité basée sur le
      projet, utilisez la matrice globale au système pour définir des
      permissions par défaut minimales à travers tous vos projets, et
      configurez les projets avec des autorisations additionnelles spécifiques
      au projet.</para>

      <para>Il y a plusieurs approches pour gérer les permissions de projet,
      et elles dépendent autant sur la culture organisationnelle que sur des
      considérations techniques. Une stratégie courante est d'autoriser les
      membres de l'équipe à avoir l'accès complet à leurs propres projets, et
      l'accès en lecture seule aux autres projets. <indexterm
          id="I_indexterm7_d1e11113" significance="normal">
          <primary>plugins</primary>

          <secondary>Extended Read Permission</secondary>
        </indexterm><indexterm id="I_indexterm7_d1e11118"
          significance="normal">
          <primary>Extended Read Permission plugin</primary>
        </indexterm>Le plugin Extended Read Permission est une extension utile
      à avoir dans ce scénario. Ce plugin vous permet d'offrir aux
      utilisateurs d'autres équipes une vue en lecture seule de la
      configuration de votre projet, sans avoir à modifier quoi que ce soit
      (voir <xref linkend="fig-hudson-security-extended-read" />). C'est un
      formidable moyen de partager des pratiques de configuration de build et
      des astuces avec d'autres équipes sans les laisser trafiquer vos
      builds.</para>

      <figure float="none" id="fig-hudson-security-extended-read">
        <title>Configurer les permissions de droit de lecture étendus</title>

        <mediaobject id="I_mediaobject7_d1e11130">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0722.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0722.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Il est intéressant de noter que, aussi importantes ou multiples
      que soient les équipes impliquées, la base de données interne de Jenkins
      atteint ses limites assez rapidement, et cela vaut le coup d'envisager
      l'intégration avec un service d'annuaire plus spécialisé comme un
      serveur LDAP, Active Directory ou Atlassian Crowd, ou alors un système
      de permission plus sophistiqué comme une sécurité basée sur les rôles,
      discutée dans la section <indexterm class="endofrange"
          id="I_indexterm7_d1e11137" significance="normal"
          startref="ch07-proj1">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11139"
          significance="normal" startref="ch07-proj2">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11141"
          significance="normal" startref="ch07-proj3">
          <primary></primary>
        </indexterm>suivante.</para>
    </sect2>

    <sect2>
      <title>Sécurité basée sur les rôles</title>

      <para>Quelques fois, <indexterm class="startofrange" id="ch07-role1"
          significance="normal">
          <primary>sécurité basée sur les rôles</primary>
        </indexterm><indexterm class="startofrange" id="ch07-role2"
          significance="normal">
          <primary>autorisation</primary>

          <secondary>sécurité basée sur les rôles</secondary>
        </indexterm><indexterm class="startofrange" id="ch07-role3"
          significance="normal">
          <primary>sécurité</primary>

          <secondary>autorisation</secondary>

          <tertiary>sécurité basée sur les rôles</tertiary>
        </indexterm>gérer les permissions utilisateur individuellement peut
      s'avérer rébarbatif, et vous pourriez ne pas vouloir vous intégrer avec
      un serveur LDAP pour configurer vos groupes avec. Une alternative plus
      récente est d'utiliser le plugin<indexterm id="I_indexterm7_d1e11165"
          significance="normal">
          <primary>plugins</primary>

          <secondary>Role Strategy</secondary>
        </indexterm><indexterm id="I_indexterm7_d1e11170"
          significance="normal">
          <primary>Role Strategy plugin</primary>
        </indexterm> Role Strategy, qui permet de définir des rôles globaux ou
      de niveau projet, et les affecter aux utilisateurs.</para>

      <para>Vous installez le plugin de façon habituelle, via le gestionnaire
      de plugin. Une fois installé, vous pouvez activer cette stratégie
      d'autorisation dans la page de configuration principale (voir <xref
      linkend="fig-hudson-security-role-based" />).</para>

      <figure float="none" id="fig-hudson-security-role-based">
        <title>Configurer la sécurité basée sur les rôles</title>

        <mediaobject id="I_mediaobject7_d1e11181">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0723.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0723.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Quand vous avez configuré cela, vous pouvez définir des rôles
      regroupant des ensembles de permissions liées les unes aux autres. Vous
      créez et configurez vos rôles, puis les assignez à vos utilisateurs,
      dans l'écran de gestion de rôles, auquel vous accédez dans l'écran
      Administrer Jenkins (voir <xref
      linkend="fig-hudson-security-manage-roles-menu" />).</para>

      <figure float="none" id="fig-hudson-security-manage-roles-menu">
        <title>Le menu de configuration Gérer les rôles</title>

        <mediaobject id="I_mediaobject7_d1e11193">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0724.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0724.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Dans l'écran Gérer les rôles, vous pouvez mettre en place des
      permissions globales <indexterm id="I_indexterm7_d1e11200"
          significance="normal">
          <primary>permissions de niveau projet, dans la sécurité basée sur
          les rôles</primary>
        </indexterm>ou de niveau projet. Les permissions globales s'appliquent
      à tous les projets, et sont typiquement des permissions d'administration
      du système ou d'accès général (voir <xref
      linkend="fig-hudson-security-global-roles" />). La mise en oeuvre de ces
      rôles est intuitive et similaire à la configuration des permissions
      utilisateur dans les autres modèles de securité que nous avons
      vus.</para>

      <figure float="0" id="fig-hudson-security-global-roles">
        <title>Gérer les rôles globaux</title>

        <mediaobject id="I_mediaobject7_d1e11209">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0725.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0725.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Les rôles de projet sont légèrement plus compliqués. Un rôle de
      projet regroupe un ensemble de permissions applicables à un ou plusieurs
      projets (a priori reliés). Vous définissez les projets concernés en
      utilisant une expression rationnelle, cela aide à avoir un ensemble
      clair et cohérernt de conventions de nommage dans vos noms de projets
      (voir <xref linkend="fig-hudson-security-project-roles" />). Par
      exemple, vous pouvez vouloir créer des rôles distinguant les
      développeurs avec des droits complets sur leurs propres projets
      d'utilisateurs qui peuvent simplement déclencher un build et voir le
      résultat. Ou vous pouvez créer des rôles où les développeurs peuvent
      configurer certaines tâches de build de déploiement automatisé, mais que
      seules les équipes de production soient autorisés à exécuter ces
      tâches.</para>

      <figure float="0" id="fig-hudson-security-project-roles">
        <title>Gérer les rôles de projets</title>

        <mediaobject id="I_mediaobject7_d1e11221">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0726.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0726.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Une fois ces rôles définis, vous pouvez aller dans l'écran
      Assigner les rôles pour configurer les utilisateurs ou groupes avec ces
      rôles (voir <xref linkend="fig-hudson-security-assign-roles" />).</para>

      <figure float="0" id="fig-hudson-security-assign-roles">
        <title>Assigner des rôles à des utilisateurs</title>

        <mediaobject id="I_mediaobject7_d1e11234">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0727.pdf" format="PDF" />
          </imageobject>

          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0727.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>La stratégie basée sur les rôles est relativement nouvelle dans
      Jenkins, mais c'est une excellente façon de simplifier les tâches de
      gestion des permissions dans des organisations grosses, multi-équipes et
      <indexterm class="endofrange" id="I_indexterm7_d1e11241"
          significance="normal" startref="ch07-role1">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11243"
          significance="normal" startref="ch07-role2">
          <primary></primary>
        </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11245"
          significance="normal" startref="ch07-role3">
          <primary></primary>
        </indexterm> multi-projets.</para>
    </sect2>
  </sect1>

  <sect1 id="sect-security-auditing">
    <title>Audit — Garder la trace des actions utilisateurs</title>

    <para>En <indexterm class="startofrange" id="ch07-audit1"
        significance="normal">
        <primary>auditer les actions utilisateurs</primary>
      </indexterm><indexterm class="startofrange" id="ch07-audit2"
        significance="normal">
        <primary>utilisateurs</primary>

        <secondary>auditer les actions de</secondary>
      </indexterm>plus de configurer les comptes utilisateurs et leurs droits
    d'accès, il peut être utile de garder des actions de chaque utilisateur :
    en d'autres termes, qui a fait quoi à votre configuration serveur. Ce type
    de traçage est même requis dans certaines organisations.</para>

    <para>Il y a deux plugins Jenkins qui peuvent vous aider à accomplir cela.
    Le plugin Audit Trail conserve un enregistrement des changements
    utilisateur dans un fichier de log spécial. Et le plugin JobConfigHistory
    vous permet de garder des copies de versions précédentes des diverses
    configurations de tâches et du système que Jenkins utilise.</para>

    <para>Le plugin<indexterm class="startofrange" id="ch07-at1"
        significance="normal">
        <primary>plugins</primary>

        <secondary>Audit Trail</secondary>
      </indexterm><indexterm class="startofrange" id="ch07-at2"
        significance="normal">
        <primary>plugin Audit Trail</primary>
      </indexterm> Audit Trail garde une trace des principales actions
    utilisateur dans un ensemble de fichiers de logs tournants. Pour mettre
    cela en place, allez dans la page Gérer les plugins et sélectionnez le
    plugin Audit Trail dans la liste des plugins disponibles. Ensuite, comme
    d'habitude, cliquez sur Installer et redémarrez Jenkins une fois que le
    plugin a été téléchargé.</para>

    <para>La configuration de l'audit trail s'effectue dans la section Audit
    Trail de l'écran de configuration principal de Jenkins (voir <xref
    linkend="fig-hudson-security-audit-trail" />). Le champ le plus important
    est l'emplacement des logs, qui indique où se trouve le répertoire dans
    lequel les logs doivent être écrits. L'audit trail est conçu pour produire
    des logs de style système, qui sont souvent placés dans un répertoire
    système comme <filename moreinfo="none">/var/log</filename>. Vous pouvez
    aussi configurer le nombre de fichiers de logs à maintenir, et la taille
    maximale (approximative) de chaque fichier. L'option la plus simple est de
    fournir un chemin absolu (comme <filename
    moreinfo="none">/var/log/hudson.log</filename>), auquel cas Jenkins écrira
    dans des fichiers de logs avec des noms comme <filename
    moreinfo="none">/var/log/hudson.log.1</filename>, <filename
    moreinfo="none">/var/log/hudson.log.2</filename>, et ainsi de suite. Bien
    sûr, vous devez vous assurer que l'utilisateur exécutant votre instance
    Jenkins peut écrire dans ce répertoire.</para>

    <figure float="0" id="fig-hudson-security-audit-trail">
      <title>Configurer le plugin Audit Trail</title>

      <mediaobject id="I_mediaobject7_d1e11294">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0728.pdf" format="PDF" />
        </imageobject>

        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0728.png" format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Vous pouvez aussi utiliser le format défini dans la classe de l'API
    de logging Java <ulink
    url="http://download.oracle.com/javase/1.5.0/docs/api/java/util/logging/FileHandler.html">FileHandler</ulink>
    pour plus de contrôle sur les fichiers de log générés. Dans ce format,
    vous pouvez insérer des variables telles que <literal
    moreinfo="none">%h</literal>, pour le répertoire racine de l'utilisateur
    courant, et <literal moreinfo="none">%t</literal>, pour le répertoire
    temporaire du système, afin de construire un chemin de fichier plus
    dynamique.</para>

    <para>Par défaut, les détails enregistrés dans les logs d'audit sont assez
    légers — ils enregistrement effectivement les actions clés effectuées,
    comme la création, la modification ou la suppression de configurations de
    tâches ou de vues, ainsi que l'utilisateur qui a effectué ces actions. Le
    log montre aussi comment les tâches individuelles ont été démarrées. Voici
    un extrait du log par défaut :</para>

    <programlisting format="linespecific" id="I_programlisting7_d1e11312">Dec 27, 2010 9:16:08 AM /job/game-of-life/configSubmit by johnsmart
Dec 27, 2010 9:16:42 AM /view/All/createItem by johnsmart
Dec 27, 2010 9:16:57 AM /job/game-of-life-prod-deployment/doDelete by johnsmart
Dec 27, 2010 9:24:38 AM job/game-of-life/ #177 Started by user johnsmart
Dec 27, 2010 9:25:57 AM job/game-of-life-acceptance-tests/ #107 Started by upstream 
    project "game-of-life" build number 177
Dec 27, 2010 9:25:58 AM job/game-of-life-functional-tests/ #7 Started by upstream 
    project "game-of-life" build number 177
Dec 27, 2010 9:28:15 AM /configSubmit by johnsmart</programlisting>

    <para>L'audit trail est certainement utile, particulièrement avec une
    perspective d'administration système. Toutefois, cela ne produit pas
    d'information à propos des changements exacts qui ont été faits à la
    configuration Jenkins. Néanmoins, une des raisons les plus importantes
    pour garder des traces d'actions utilisateurs dans Jenkins est de savoir
    quels changements ont été faits aux configurations de tâches de build.
    Quand quelque chose se passe mal, il peut être utile de savoir quels
    changements ont été faits et être donc capables de les défaire. Le plugin
    JobConfigHistory vous permet justement de faire <indexterm
        class="endofrange" id="I_indexterm7_d1e11316" significance="normal"
        startref="ch07-at1">
        <primary></primary>
      </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11318"
        significance="normal" startref="ch07-at2">
        <primary></primary>
      </indexterm> cela.</para>

    <para>Le <indexterm class="startofrange" id="ch07-jobconfig"
        significance="normal">
        <primary>JobConfigHistory plugin</primary>
      </indexterm><indexterm class="startofrange" id="ch07-jobconfig2"
        significance="normal">
        <primary>plugins</primary>

        <secondary>JobConfigHistory</secondary>
      </indexterm>plugin JobConfigHistory est un outil puissant vous
    permettant de conserver l'historique complet des changements faits à la
    fois sur les tâches et fichiers de configuration système. Vous l'installez
    depuis le gestionnaire de plugin de la façon habituelle. Une fois
    installé, vous pouvez régler finement la configuration de l'historique des
    tâches dans l'écran Administrer Jenkins (voir <xref
    linkend="fig-hudson-security-confighistory-setup" />).</para>

    <figure float="0" id="fig-hudson-security-confighistory-setup">
      <title>Mettre en place l'historique des configurations de tâches</title>

      <mediaobject id="I_mediaobject7_d1e11338">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0729.pdf" format="PDF" />
        </imageobject>

        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0729.png" format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Ici, vous pouvez configurer un bon nombre d'options utiles non
    standard. En particulier, vous devriez spécifier un répertoire où Jenkins
    peut stocker l'historique de configuration, dans le champ "Répertoire
    racine de l'historique”. C'est le répertoire dans lequel Jenkins stockera
    un enregistrement des changements à la fois liés au système et aux
    configuration de tâches. Cela peut être à la fois un répertoire absolu
    (comme <filename moreinfo="none">/var/hudson/history</filename>), ou un
    répertoire relatif, calculé à partir de la racine du répertoire de Jenkins
    (voir <xref linkend="sec-hudson-home-directory" />). Si vous ne faites pas
    cela, l'historique de configuration des tâches sera stockés dans les
    tâches elles-mêmes, et tout sera perdu si vous supprimez une tâche.</para>

    <para>Il y a un certain nombre d'autres options utiles dans la section
    Avancé. La case à cocher “Sauver les changements de configuration système”
    vous permet de garder la trace de mise à jour de configuration de niveau
    système, et non pas seulement de celles spécifiques aux tâches. Et la case
    à cocher “Ne pas sauver d'historique dupliqué” vous permet d'éviter
    d'avoir des enregistrements de configuration si aucun changement réel n'a
    été effectué. Sinon, une nouvelle version du fichier de configuration sera
    enregistrée, même si vous avez seulement appuyé sur le bouton Sauver sans
    faire aucun changement. Jenkins peut aussi provoquer cela en interne - par
    exemple, le paramétrage de la configuration système est entièrement
    sauvée à chaque fois que la page principale de configuration est sauvée,
    même si aucune modification n'a été faite.</para>

    <para>Une fois que vous avez mis ce plugin en place, vous pouvez accéder à
    l'historique pour le serveur complet, incluant les mises à jour de
    configuration système, aussi bien qu'aux changements effectués à la
    configuration de chaque projet. Dans les deux cas, vous pouvez voir ces
    changements en cliquant sur l'icône Job Config History sur la droite de
    l'écran. Cliquer sur cette icône affichera une vue de tout votre
    historique de configuration, incluant les changements de tâches and les
    changements de niveau système (voir <xref
    linkend="fig-hudson-jobconfig-global-history" />).</para>

    <figure float="none" id="fig-hudson-jobconfig-global-history">
      <title>Présentation de l'historique de configuration des tâches</title>

      <mediaobject id="I_mediaobject7_d1e11359">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0730.pdf" format="PDF" />
        </imageobject>

        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0730.png" format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Si vous cliquez sur un changement de niveau système (indiqué par le
    suffixe “(system)” dans la liste), Jenkins vous emmène vers un écran
    listant toutes les versions de ce fichier, et vous permet de voir les
    différences entre les versions (voir <xref
    linkend="fig-hudson-jobconfig-config-history" />). Les différences sont
    affichées sous la forme de fichiers <emphasis>diff</emphasis>, ce qui
    n'est pas particulièrement lisible en soi. Toutefois, pour de petits
    changements, le format XML lisible de Jenkins rend cela suffisant pour
    comprendre le changement qui a été effectué.</para>

    <figure float="0" id="fig-hudson-jobconfig-config-history">
      <title>Voir les différences dans l'historique de configuration des
      tâches</title>

      <mediaobject id="I_mediaobject7_d1e11374">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0731.pdf" format="PDF" />
        </imageobject>

        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0731.png" format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Le plugin JobConfigHistory est un outil puissant. Toutefois, à
    l'écriture de ces lignes, il a ses limites. Comme mentionné, le plugin
    affiche uniquement les différences au format <filename
    moreinfo="none">diff</filename> brut, et vous ne pouvez pas restaurer une
    version précédente d'un fichier de configuration (faire cela hors contexte
    pourrait être dangereux dans certaines circonstances, particulièrement
    pour les fichiers de configuration système). Cependant, il donne un aperçu
    très clair des changements ayant été effectués, à la fois sur vos tâches
    de construction et sur votre configuration<indexterm class="endofrange"
        id="I_indexterm7_d1e11384" significance="normal"
        startref="ch07-jobconfig">
        <primary></primary>
      </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11386"
        significance="normal" startref="ch07-jobconfig2">
        <primary></primary>
      </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11388"
        significance="normal" startref="ch07-audit1">
        <primary></primary>
      </indexterm><indexterm class="endofrange" id="I_indexterm7_d1e11390"
        significance="normal" startref="ch07-audit2">
        <primary></primary>
      </indexterm> système.</para>
  </sect1>

  <sect1 id="sect-security-conclusion">
    <title>Conclusion</title>

    <para>Dans ce chapitre, nous avons regardé une variété de façons de
    configurer la sécurité dans Jenkins. Le modèle de sécurité Jenkins, avec
    les deux concepts orthogonaux d'Authentification et d'Autorisation, est
    flexible et extensible. Pour une installation Jenkins de n'importe quelle
    taille, vous devriez essayer d'intégrer votre stratégie de sécurité
    Jenkins dans l'organisation dans son ensemble. Ceci peut aller d'une
    simple intégration à votre annuaire local LDAP à la mise en place d'une
    solution complète de SSO comme Crowd ou CAS. Dans les deux cas, ceci
    rendra le système considérablement plus facile à administrer à long
    terme.</para>
  </sect1>
</chapter>
